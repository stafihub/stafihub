// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: stafihub/stafihub/ledger/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/cosmos/cosmos-sdk/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_stafihub_stafihub_utils "github.com/stafihub/stafihub/utils"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgSetEraUnbondLimit struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Denom   string `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	Limit   uint32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit"`
}

func (m *MsgSetEraUnbondLimit) Reset()         { *m = MsgSetEraUnbondLimit{} }
func (m *MsgSetEraUnbondLimit) String() string { return proto.CompactTextString(m) }
func (*MsgSetEraUnbondLimit) ProtoMessage()    {}
func (*MsgSetEraUnbondLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{0}
}
func (m *MsgSetEraUnbondLimit) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetEraUnbondLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetEraUnbondLimit.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetEraUnbondLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetEraUnbondLimit.Merge(m, src)
}
func (m *MsgSetEraUnbondLimit) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetEraUnbondLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetEraUnbondLimit.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetEraUnbondLimit proto.InternalMessageInfo

func (m *MsgSetEraUnbondLimit) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetEraUnbondLimit) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *MsgSetEraUnbondLimit) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type MsgSetEraUnbondLimitResponse struct {
}

func (m *MsgSetEraUnbondLimitResponse) Reset()         { *m = MsgSetEraUnbondLimitResponse{} }
func (m *MsgSetEraUnbondLimitResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetEraUnbondLimitResponse) ProtoMessage()    {}
func (*MsgSetEraUnbondLimitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{1}
}
func (m *MsgSetEraUnbondLimitResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetEraUnbondLimitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetEraUnbondLimitResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetEraUnbondLimitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetEraUnbondLimitResponse.Merge(m, src)
}
func (m *MsgSetEraUnbondLimitResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetEraUnbondLimitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetEraUnbondLimitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetEraUnbondLimitResponse proto.InternalMessageInfo

type MsgSetPoolDetail struct {
	Creator     string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Denom       string   `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	Pool        string   `protobuf:"bytes,3,opt,name=pool,proto3" json:"pool,omitempty"`
	SubAccounts []string `protobuf:"bytes,4,rep,name=subAccounts,proto3" json:"subAccounts,omitempty"`
	Threshold   uint32   `protobuf:"varint,5,opt,name=threshold,proto3" json:"threshold"`
}

func (m *MsgSetPoolDetail) Reset()         { *m = MsgSetPoolDetail{} }
func (m *MsgSetPoolDetail) String() string { return proto.CompactTextString(m) }
func (*MsgSetPoolDetail) ProtoMessage()    {}
func (*MsgSetPoolDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{2}
}
func (m *MsgSetPoolDetail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetPoolDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetPoolDetail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetPoolDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetPoolDetail.Merge(m, src)
}
func (m *MsgSetPoolDetail) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetPoolDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetPoolDetail.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetPoolDetail proto.InternalMessageInfo

func (m *MsgSetPoolDetail) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetPoolDetail) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *MsgSetPoolDetail) GetPool() string {
	if m != nil {
		return m.Pool
	}
	return ""
}

func (m *MsgSetPoolDetail) GetSubAccounts() []string {
	if m != nil {
		return m.SubAccounts
	}
	return nil
}

func (m *MsgSetPoolDetail) GetThreshold() uint32 {
	if m != nil {
		return m.Threshold
	}
	return 0
}

type MsgSetPoolDetailResponse struct {
}

func (m *MsgSetPoolDetailResponse) Reset()         { *m = MsgSetPoolDetailResponse{} }
func (m *MsgSetPoolDetailResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetPoolDetailResponse) ProtoMessage()    {}
func (*MsgSetPoolDetailResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{3}
}
func (m *MsgSetPoolDetailResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetPoolDetailResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetPoolDetailResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetPoolDetailResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetPoolDetailResponse.Merge(m, src)
}
func (m *MsgSetPoolDetailResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetPoolDetailResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetPoolDetailResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetPoolDetailResponse proto.InternalMessageInfo

type MsgSetLeastBond struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Denom     string `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	LeastBond string `protobuf:"bytes,3,opt,name=leastBond,proto3" json:"leastBond,omitempty"`
}

func (m *MsgSetLeastBond) Reset()         { *m = MsgSetLeastBond{} }
func (m *MsgSetLeastBond) String() string { return proto.CompactTextString(m) }
func (*MsgSetLeastBond) ProtoMessage()    {}
func (*MsgSetLeastBond) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{4}
}
func (m *MsgSetLeastBond) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetLeastBond) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetLeastBond.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetLeastBond) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetLeastBond.Merge(m, src)
}
func (m *MsgSetLeastBond) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetLeastBond) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetLeastBond.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetLeastBond proto.InternalMessageInfo

func (m *MsgSetLeastBond) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetLeastBond) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *MsgSetLeastBond) GetLeastBond() string {
	if m != nil {
		return m.LeastBond
	}
	return ""
}

type MsgSetLeastBondResponse struct {
}

func (m *MsgSetLeastBondResponse) Reset()         { *m = MsgSetLeastBondResponse{} }
func (m *MsgSetLeastBondResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetLeastBondResponse) ProtoMessage()    {}
func (*MsgSetLeastBondResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{5}
}
func (m *MsgSetLeastBondResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetLeastBondResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetLeastBondResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetLeastBondResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetLeastBondResponse.Merge(m, src)
}
func (m *MsgSetLeastBondResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetLeastBondResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetLeastBondResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetLeastBondResponse proto.InternalMessageInfo

type MsgClearCurrentEraSnapShots struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Denom   string `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
}

func (m *MsgClearCurrentEraSnapShots) Reset()         { *m = MsgClearCurrentEraSnapShots{} }
func (m *MsgClearCurrentEraSnapShots) String() string { return proto.CompactTextString(m) }
func (*MsgClearCurrentEraSnapShots) ProtoMessage()    {}
func (*MsgClearCurrentEraSnapShots) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{6}
}
func (m *MsgClearCurrentEraSnapShots) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgClearCurrentEraSnapShots) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgClearCurrentEraSnapShots.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgClearCurrentEraSnapShots) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgClearCurrentEraSnapShots.Merge(m, src)
}
func (m *MsgClearCurrentEraSnapShots) XXX_Size() int {
	return m.Size()
}
func (m *MsgClearCurrentEraSnapShots) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgClearCurrentEraSnapShots.DiscardUnknown(m)
}

var xxx_messageInfo_MsgClearCurrentEraSnapShots proto.InternalMessageInfo

func (m *MsgClearCurrentEraSnapShots) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgClearCurrentEraSnapShots) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

type MsgClearCurrentEraSnapShotsResponse struct {
}

func (m *MsgClearCurrentEraSnapShotsResponse) Reset()         { *m = MsgClearCurrentEraSnapShotsResponse{} }
func (m *MsgClearCurrentEraSnapShotsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgClearCurrentEraSnapShotsResponse) ProtoMessage()    {}
func (*MsgClearCurrentEraSnapShotsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{7}
}
func (m *MsgClearCurrentEraSnapShotsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgClearCurrentEraSnapShotsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgClearCurrentEraSnapShotsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgClearCurrentEraSnapShotsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgClearCurrentEraSnapShotsResponse.Merge(m, src)
}
func (m *MsgClearCurrentEraSnapShotsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgClearCurrentEraSnapShotsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgClearCurrentEraSnapShotsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgClearCurrentEraSnapShotsResponse proto.InternalMessageInfo

type MsgSetStakingRewardCommission struct {
	Creator    string                                 `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Denom      string                                 `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	Commission github_com_stafihub_stafihub_utils.Dec `protobuf:"bytes,3,opt,name=commission,proto3,customtype=github.com/stafihub/stafihub/utils.Dec" json:"commission"`
}

func (m *MsgSetStakingRewardCommission) Reset()         { *m = MsgSetStakingRewardCommission{} }
func (m *MsgSetStakingRewardCommission) String() string { return proto.CompactTextString(m) }
func (*MsgSetStakingRewardCommission) ProtoMessage()    {}
func (*MsgSetStakingRewardCommission) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{8}
}
func (m *MsgSetStakingRewardCommission) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetStakingRewardCommission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetStakingRewardCommission.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetStakingRewardCommission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetStakingRewardCommission.Merge(m, src)
}
func (m *MsgSetStakingRewardCommission) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetStakingRewardCommission) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetStakingRewardCommission.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetStakingRewardCommission proto.InternalMessageInfo

func (m *MsgSetStakingRewardCommission) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetStakingRewardCommission) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

type MsgSetStakingRewardCommissionResponse struct {
}

func (m *MsgSetStakingRewardCommissionResponse) Reset()         { *m = MsgSetStakingRewardCommissionResponse{} }
func (m *MsgSetStakingRewardCommissionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetStakingRewardCommissionResponse) ProtoMessage()    {}
func (*MsgSetStakingRewardCommissionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{9}
}
func (m *MsgSetStakingRewardCommissionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetStakingRewardCommissionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetStakingRewardCommissionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetStakingRewardCommissionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetStakingRewardCommissionResponse.Merge(m, src)
}
func (m *MsgSetStakingRewardCommissionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetStakingRewardCommissionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetStakingRewardCommissionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetStakingRewardCommissionResponse proto.InternalMessageInfo

type MsgSetProtocolFeeReceiver struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Receiver string `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
}

func (m *MsgSetProtocolFeeReceiver) Reset()         { *m = MsgSetProtocolFeeReceiver{} }
func (m *MsgSetProtocolFeeReceiver) String() string { return proto.CompactTextString(m) }
func (*MsgSetProtocolFeeReceiver) ProtoMessage()    {}
func (*MsgSetProtocolFeeReceiver) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{10}
}
func (m *MsgSetProtocolFeeReceiver) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetProtocolFeeReceiver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetProtocolFeeReceiver.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetProtocolFeeReceiver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetProtocolFeeReceiver.Merge(m, src)
}
func (m *MsgSetProtocolFeeReceiver) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetProtocolFeeReceiver) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetProtocolFeeReceiver.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetProtocolFeeReceiver proto.InternalMessageInfo

func (m *MsgSetProtocolFeeReceiver) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetProtocolFeeReceiver) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

type MsgSetProtocolFeeReceiverResponse struct {
}

func (m *MsgSetProtocolFeeReceiverResponse) Reset()         { *m = MsgSetProtocolFeeReceiverResponse{} }
func (m *MsgSetProtocolFeeReceiverResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetProtocolFeeReceiverResponse) ProtoMessage()    {}
func (*MsgSetProtocolFeeReceiverResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{11}
}
func (m *MsgSetProtocolFeeReceiverResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetProtocolFeeReceiverResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetProtocolFeeReceiverResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetProtocolFeeReceiverResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetProtocolFeeReceiverResponse.Merge(m, src)
}
func (m *MsgSetProtocolFeeReceiverResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetProtocolFeeReceiverResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetProtocolFeeReceiverResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetProtocolFeeReceiverResponse proto.InternalMessageInfo

type MsgSetUnbondRelayFee struct {
	Creator string                                  `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Denom   string                                  `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	Value   github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,3,opt,name=value,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Coin" json:"value"`
}

func (m *MsgSetUnbondRelayFee) Reset()         { *m = MsgSetUnbondRelayFee{} }
func (m *MsgSetUnbondRelayFee) String() string { return proto.CompactTextString(m) }
func (*MsgSetUnbondRelayFee) ProtoMessage()    {}
func (*MsgSetUnbondRelayFee) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{12}
}
func (m *MsgSetUnbondRelayFee) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetUnbondRelayFee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetUnbondRelayFee.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetUnbondRelayFee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetUnbondRelayFee.Merge(m, src)
}
func (m *MsgSetUnbondRelayFee) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetUnbondRelayFee) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetUnbondRelayFee.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetUnbondRelayFee proto.InternalMessageInfo

func (m *MsgSetUnbondRelayFee) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetUnbondRelayFee) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

type MsgSetUnbondRelayFeeResponse struct {
}

func (m *MsgSetUnbondRelayFeeResponse) Reset()         { *m = MsgSetUnbondRelayFeeResponse{} }
func (m *MsgSetUnbondRelayFeeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetUnbondRelayFeeResponse) ProtoMessage()    {}
func (*MsgSetUnbondRelayFeeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{13}
}
func (m *MsgSetUnbondRelayFeeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetUnbondRelayFeeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetUnbondRelayFeeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetUnbondRelayFeeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetUnbondRelayFeeResponse.Merge(m, src)
}
func (m *MsgSetUnbondRelayFeeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetUnbondRelayFeeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetUnbondRelayFeeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetUnbondRelayFeeResponse proto.InternalMessageInfo

type MsgLiquidityUnbond struct {
	Creator   string                                  `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Pool      string                                  `protobuf:"bytes,2,opt,name=pool,proto3" json:"pool,omitempty"`
	Value     github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,3,opt,name=value,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Coin" json:"value"`
	Recipient string                                  `protobuf:"bytes,4,opt,name=recipient,proto3" json:"recipient,omitempty"`
}

func (m *MsgLiquidityUnbond) Reset()         { *m = MsgLiquidityUnbond{} }
func (m *MsgLiquidityUnbond) String() string { return proto.CompactTextString(m) }
func (*MsgLiquidityUnbond) ProtoMessage()    {}
func (*MsgLiquidityUnbond) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{14}
}
func (m *MsgLiquidityUnbond) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgLiquidityUnbond) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgLiquidityUnbond.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgLiquidityUnbond) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLiquidityUnbond.Merge(m, src)
}
func (m *MsgLiquidityUnbond) XXX_Size() int {
	return m.Size()
}
func (m *MsgLiquidityUnbond) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLiquidityUnbond.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLiquidityUnbond proto.InternalMessageInfo

func (m *MsgLiquidityUnbond) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgLiquidityUnbond) GetPool() string {
	if m != nil {
		return m.Pool
	}
	return ""
}

func (m *MsgLiquidityUnbond) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

type MsgLiquidityUnbondResponse struct {
}

func (m *MsgLiquidityUnbondResponse) Reset()         { *m = MsgLiquidityUnbondResponse{} }
func (m *MsgLiquidityUnbondResponse) String() string { return proto.CompactTextString(m) }
func (*MsgLiquidityUnbondResponse) ProtoMessage()    {}
func (*MsgLiquidityUnbondResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{15}
}
func (m *MsgLiquidityUnbondResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgLiquidityUnbondResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgLiquidityUnbondResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgLiquidityUnbondResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLiquidityUnbondResponse.Merge(m, src)
}
func (m *MsgLiquidityUnbondResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgLiquidityUnbondResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLiquidityUnbondResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLiquidityUnbondResponse proto.InternalMessageInfo

type MsgSetUnbondCommission struct {
	Creator    string                                 `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Denom      string                                 `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	Commission github_com_stafihub_stafihub_utils.Dec `protobuf:"bytes,3,opt,name=commission,proto3,customtype=github.com/stafihub/stafihub/utils.Dec" json:"commission"`
}

func (m *MsgSetUnbondCommission) Reset()         { *m = MsgSetUnbondCommission{} }
func (m *MsgSetUnbondCommission) String() string { return proto.CompactTextString(m) }
func (*MsgSetUnbondCommission) ProtoMessage()    {}
func (*MsgSetUnbondCommission) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{16}
}
func (m *MsgSetUnbondCommission) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetUnbondCommission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetUnbondCommission.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetUnbondCommission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetUnbondCommission.Merge(m, src)
}
func (m *MsgSetUnbondCommission) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetUnbondCommission) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetUnbondCommission.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetUnbondCommission proto.InternalMessageInfo

func (m *MsgSetUnbondCommission) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetUnbondCommission) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

type MsgSetUnbondCommissionResponse struct {
}

func (m *MsgSetUnbondCommissionResponse) Reset()         { *m = MsgSetUnbondCommissionResponse{} }
func (m *MsgSetUnbondCommissionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetUnbondCommissionResponse) ProtoMessage()    {}
func (*MsgSetUnbondCommissionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{17}
}
func (m *MsgSetUnbondCommissionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetUnbondCommissionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetUnbondCommissionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetUnbondCommissionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetUnbondCommissionResponse.Merge(m, src)
}
func (m *MsgSetUnbondCommissionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetUnbondCommissionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetUnbondCommissionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetUnbondCommissionResponse proto.InternalMessageInfo

type MsgSubmitSignature struct {
	Creator   string         `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Denom     string         `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	Era       uint32         `protobuf:"varint,3,opt,name=era,proto3" json:"era"`
	Pool      string         `protobuf:"bytes,4,opt,name=pool,proto3" json:"pool,omitempty"`
	TxType    OriginalTxType `protobuf:"varint,5,opt,name=txType,proto3,enum=stafihub.stafihub.ledger.OriginalTxType" json:"txType,omitempty"`
	PropId    string         `protobuf:"bytes,6,opt,name=propId,proto3" json:"propId,omitempty"`
	Signature string         `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *MsgSubmitSignature) Reset()         { *m = MsgSubmitSignature{} }
func (m *MsgSubmitSignature) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitSignature) ProtoMessage()    {}
func (*MsgSubmitSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{18}
}
func (m *MsgSubmitSignature) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubmitSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubmitSignature.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubmitSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitSignature.Merge(m, src)
}
func (m *MsgSubmitSignature) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubmitSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitSignature.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitSignature proto.InternalMessageInfo

func (m *MsgSubmitSignature) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSubmitSignature) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *MsgSubmitSignature) GetEra() uint32 {
	if m != nil {
		return m.Era
	}
	return 0
}

func (m *MsgSubmitSignature) GetPool() string {
	if m != nil {
		return m.Pool
	}
	return ""
}

func (m *MsgSubmitSignature) GetTxType() OriginalTxType {
	if m != nil {
		return m.TxType
	}
	return TxTypeDealEraUpdated
}

func (m *MsgSubmitSignature) GetPropId() string {
	if m != nil {
		return m.PropId
	}
	return ""
}

func (m *MsgSubmitSignature) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type MsgSubmitSignatureResponse struct {
}

func (m *MsgSubmitSignatureResponse) Reset()         { *m = MsgSubmitSignatureResponse{} }
func (m *MsgSubmitSignatureResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitSignatureResponse) ProtoMessage()    {}
func (*MsgSubmitSignatureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{19}
}
func (m *MsgSubmitSignatureResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubmitSignatureResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubmitSignatureResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubmitSignatureResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitSignatureResponse.Merge(m, src)
}
func (m *MsgSubmitSignatureResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubmitSignatureResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitSignatureResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitSignatureResponse proto.InternalMessageInfo

type MsgSetRParams struct {
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Denom           string `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	GasPrice        string `protobuf:"bytes,3,opt,name=gasPrice,proto3" json:"gasPrice,omitempty"`
	EraSeconds      uint32 `protobuf:"varint,4,opt,name=eraSeconds,proto3" json:"eraSeconds,omitempty"`
	Offset          int32  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset"`
	BondingDuration uint32 `protobuf:"varint,6,opt,name=bondingDuration,proto3" json:"bondingDuration"`
	LeastBond       string `protobuf:"bytes,7,opt,name=leastBond,proto3" json:"leastBond,omitempty"`
}

func (m *MsgSetRParams) Reset()         { *m = MsgSetRParams{} }
func (m *MsgSetRParams) String() string { return proto.CompactTextString(m) }
func (*MsgSetRParams) ProtoMessage()    {}
func (*MsgSetRParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{20}
}
func (m *MsgSetRParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetRParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetRParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetRParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetRParams.Merge(m, src)
}
func (m *MsgSetRParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetRParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetRParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetRParams proto.InternalMessageInfo

func (m *MsgSetRParams) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetRParams) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *MsgSetRParams) GetGasPrice() string {
	if m != nil {
		return m.GasPrice
	}
	return ""
}

func (m *MsgSetRParams) GetEraSeconds() uint32 {
	if m != nil {
		return m.EraSeconds
	}
	return 0
}

func (m *MsgSetRParams) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *MsgSetRParams) GetBondingDuration() uint32 {
	if m != nil {
		return m.BondingDuration
	}
	return 0
}

func (m *MsgSetRParams) GetLeastBond() string {
	if m != nil {
		return m.LeastBond
	}
	return ""
}

type MsgSetRParamsResponse struct {
}

func (m *MsgSetRParamsResponse) Reset()         { *m = MsgSetRParamsResponse{} }
func (m *MsgSetRParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetRParamsResponse) ProtoMessage()    {}
func (*MsgSetRParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{21}
}
func (m *MsgSetRParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetRParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetRParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetRParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetRParamsResponse.Merge(m, src)
}
func (m *MsgSetRParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetRParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetRParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetRParamsResponse proto.InternalMessageInfo

type MsgSetRelayFeeReceiver struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Denom    string `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	Receiver string `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty"`
}

func (m *MsgSetRelayFeeReceiver) Reset()         { *m = MsgSetRelayFeeReceiver{} }
func (m *MsgSetRelayFeeReceiver) String() string { return proto.CompactTextString(m) }
func (*MsgSetRelayFeeReceiver) ProtoMessage()    {}
func (*MsgSetRelayFeeReceiver) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{22}
}
func (m *MsgSetRelayFeeReceiver) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetRelayFeeReceiver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetRelayFeeReceiver.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetRelayFeeReceiver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetRelayFeeReceiver.Merge(m, src)
}
func (m *MsgSetRelayFeeReceiver) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetRelayFeeReceiver) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetRelayFeeReceiver.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetRelayFeeReceiver proto.InternalMessageInfo

func (m *MsgSetRelayFeeReceiver) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetRelayFeeReceiver) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *MsgSetRelayFeeReceiver) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

type MsgSetRelayFeeReceiverResponse struct {
}

func (m *MsgSetRelayFeeReceiverResponse) Reset()         { *m = MsgSetRelayFeeReceiverResponse{} }
func (m *MsgSetRelayFeeReceiverResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetRelayFeeReceiverResponse) ProtoMessage()    {}
func (*MsgSetRelayFeeReceiverResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{23}
}
func (m *MsgSetRelayFeeReceiverResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetRelayFeeReceiverResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetRelayFeeReceiverResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetRelayFeeReceiverResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetRelayFeeReceiverResponse.Merge(m, src)
}
func (m *MsgSetRelayFeeReceiverResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetRelayFeeReceiverResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetRelayFeeReceiverResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetRelayFeeReceiverResponse proto.InternalMessageInfo

type MsgSetRelayGasPrice struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Denom    string `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	GasPrice string `protobuf:"bytes,3,opt,name=gasPrice,proto3" json:"gasPrice,omitempty"`
}

func (m *MsgSetRelayGasPrice) Reset()         { *m = MsgSetRelayGasPrice{} }
func (m *MsgSetRelayGasPrice) String() string { return proto.CompactTextString(m) }
func (*MsgSetRelayGasPrice) ProtoMessage()    {}
func (*MsgSetRelayGasPrice) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{24}
}
func (m *MsgSetRelayGasPrice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetRelayGasPrice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetRelayGasPrice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetRelayGasPrice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetRelayGasPrice.Merge(m, src)
}
func (m *MsgSetRelayGasPrice) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetRelayGasPrice) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetRelayGasPrice.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetRelayGasPrice proto.InternalMessageInfo

func (m *MsgSetRelayGasPrice) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetRelayGasPrice) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *MsgSetRelayGasPrice) GetGasPrice() string {
	if m != nil {
		return m.GasPrice
	}
	return ""
}

type MsgSetRelayGasPriceResponse struct {
}

func (m *MsgSetRelayGasPriceResponse) Reset()         { *m = MsgSetRelayGasPriceResponse{} }
func (m *MsgSetRelayGasPriceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetRelayGasPriceResponse) ProtoMessage()    {}
func (*MsgSetRelayGasPriceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{25}
}
func (m *MsgSetRelayGasPriceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetRelayGasPriceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetRelayGasPriceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetRelayGasPriceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetRelayGasPriceResponse.Merge(m, src)
}
func (m *MsgSetRelayGasPriceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetRelayGasPriceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetRelayGasPriceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetRelayGasPriceResponse proto.InternalMessageInfo

type MsgSetEraSeconds struct {
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Denom           string `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	EraSeconds      uint32 `protobuf:"varint,3,opt,name=eraSeconds,proto3" json:"eraSeconds"`
	BondingDuration uint32 `protobuf:"varint,4,opt,name=bondingDuration,proto3" json:"bondingDuration"`
	Offset          int32  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset"`
}

func (m *MsgSetEraSeconds) Reset()         { *m = MsgSetEraSeconds{} }
func (m *MsgSetEraSeconds) String() string { return proto.CompactTextString(m) }
func (*MsgSetEraSeconds) ProtoMessage()    {}
func (*MsgSetEraSeconds) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{26}
}
func (m *MsgSetEraSeconds) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetEraSeconds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetEraSeconds.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetEraSeconds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetEraSeconds.Merge(m, src)
}
func (m *MsgSetEraSeconds) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetEraSeconds) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetEraSeconds.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetEraSeconds proto.InternalMessageInfo

func (m *MsgSetEraSeconds) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetEraSeconds) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *MsgSetEraSeconds) GetEraSeconds() uint32 {
	if m != nil {
		return m.EraSeconds
	}
	return 0
}

func (m *MsgSetEraSeconds) GetBondingDuration() uint32 {
	if m != nil {
		return m.BondingDuration
	}
	return 0
}

func (m *MsgSetEraSeconds) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type MsgSetEraSecondsResponse struct {
}

func (m *MsgSetEraSecondsResponse) Reset()         { *m = MsgSetEraSecondsResponse{} }
func (m *MsgSetEraSecondsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetEraSecondsResponse) ProtoMessage()    {}
func (*MsgSetEraSecondsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{27}
}
func (m *MsgSetEraSecondsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetEraSecondsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetEraSecondsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetEraSecondsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetEraSecondsResponse.Merge(m, src)
}
func (m *MsgSetEraSecondsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetEraSecondsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetEraSecondsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetEraSecondsResponse proto.InternalMessageInfo

type MsgRmBondedPool struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Denom   string `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgRmBondedPool) Reset()         { *m = MsgRmBondedPool{} }
func (m *MsgRmBondedPool) String() string { return proto.CompactTextString(m) }
func (*MsgRmBondedPool) ProtoMessage()    {}
func (*MsgRmBondedPool) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{28}
}
func (m *MsgRmBondedPool) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRmBondedPool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRmBondedPool.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRmBondedPool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRmBondedPool.Merge(m, src)
}
func (m *MsgRmBondedPool) XXX_Size() int {
	return m.Size()
}
func (m *MsgRmBondedPool) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRmBondedPool.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRmBondedPool proto.InternalMessageInfo

func (m *MsgRmBondedPool) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRmBondedPool) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *MsgRmBondedPool) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgRmBondedPoolResponse struct {
}

func (m *MsgRmBondedPoolResponse) Reset()         { *m = MsgRmBondedPoolResponse{} }
func (m *MsgRmBondedPoolResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRmBondedPoolResponse) ProtoMessage()    {}
func (*MsgRmBondedPoolResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{29}
}
func (m *MsgRmBondedPoolResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRmBondedPoolResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRmBondedPoolResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRmBondedPoolResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRmBondedPoolResponse.Merge(m, src)
}
func (m *MsgRmBondedPoolResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRmBondedPoolResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRmBondedPoolResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRmBondedPoolResponse proto.InternalMessageInfo

type MsgMigrateInit struct {
	Creator          string                                 `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Denom            string                                 `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	Pool             string                                 `protobuf:"bytes,3,opt,name=pool,proto3" json:"pool,omitempty"`
	TotalSupply      github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,4,opt,name=totalSupply,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"totalSupply"`
	Active           github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,5,opt,name=active,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"active"`
	Bond             github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,6,opt,name=bond,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"bond"`
	Unbond           github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,7,opt,name=unbond,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"unbond"`
	ExchangeRate     github_com_stafihub_stafihub_utils.Dec `protobuf:"bytes,8,opt,name=exchangeRate,proto3,customtype=github.com/stafihub/stafihub/utils.Dec" json:"exchangeRate"`
	TotalProtocolFee github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,9,opt,name=totalProtocolFee,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"totalProtocolFee"`
}

func (m *MsgMigrateInit) Reset()         { *m = MsgMigrateInit{} }
func (m *MsgMigrateInit) String() string { return proto.CompactTextString(m) }
func (*MsgMigrateInit) ProtoMessage()    {}
func (*MsgMigrateInit) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{30}
}
func (m *MsgMigrateInit) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMigrateInit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMigrateInit.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMigrateInit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMigrateInit.Merge(m, src)
}
func (m *MsgMigrateInit) XXX_Size() int {
	return m.Size()
}
func (m *MsgMigrateInit) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMigrateInit.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMigrateInit proto.InternalMessageInfo

func (m *MsgMigrateInit) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgMigrateInit) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *MsgMigrateInit) GetPool() string {
	if m != nil {
		return m.Pool
	}
	return ""
}

type MsgMigrateInitResponse struct {
}

func (m *MsgMigrateInitResponse) Reset()         { *m = MsgMigrateInitResponse{} }
func (m *MsgMigrateInitResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMigrateInitResponse) ProtoMessage()    {}
func (*MsgMigrateInitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{31}
}
func (m *MsgMigrateInitResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMigrateInitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMigrateInitResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMigrateInitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMigrateInitResponse.Merge(m, src)
}
func (m *MsgMigrateInitResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMigrateInitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMigrateInitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMigrateInitResponse proto.InternalMessageInfo

type MsgMigrateUnbondings struct {
	Creator    string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Denom      string       `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	Pool       string       `protobuf:"bytes,3,opt,name=pool,proto3" json:"pool,omitempty"`
	Era        uint32       `protobuf:"varint,4,opt,name=era,proto3" json:"era"`
	Unbondings []*Unbonding `protobuf:"bytes,5,rep,name=unbondings,proto3" json:"unbondings,omitempty"`
}

func (m *MsgMigrateUnbondings) Reset()         { *m = MsgMigrateUnbondings{} }
func (m *MsgMigrateUnbondings) String() string { return proto.CompactTextString(m) }
func (*MsgMigrateUnbondings) ProtoMessage()    {}
func (*MsgMigrateUnbondings) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{32}
}
func (m *MsgMigrateUnbondings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMigrateUnbondings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMigrateUnbondings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMigrateUnbondings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMigrateUnbondings.Merge(m, src)
}
func (m *MsgMigrateUnbondings) XXX_Size() int {
	return m.Size()
}
func (m *MsgMigrateUnbondings) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMigrateUnbondings.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMigrateUnbondings proto.InternalMessageInfo

func (m *MsgMigrateUnbondings) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgMigrateUnbondings) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *MsgMigrateUnbondings) GetPool() string {
	if m != nil {
		return m.Pool
	}
	return ""
}

func (m *MsgMigrateUnbondings) GetEra() uint32 {
	if m != nil {
		return m.Era
	}
	return 0
}

func (m *MsgMigrateUnbondings) GetUnbondings() []*Unbonding {
	if m != nil {
		return m.Unbondings
	}
	return nil
}

type MsgMigrateUnbondingsResponse struct {
}

func (m *MsgMigrateUnbondingsResponse) Reset()         { *m = MsgMigrateUnbondingsResponse{} }
func (m *MsgMigrateUnbondingsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMigrateUnbondingsResponse) ProtoMessage()    {}
func (*MsgMigrateUnbondingsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{33}
}
func (m *MsgMigrateUnbondingsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMigrateUnbondingsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMigrateUnbondingsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMigrateUnbondingsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMigrateUnbondingsResponse.Merge(m, src)
}
func (m *MsgMigrateUnbondingsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMigrateUnbondingsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMigrateUnbondingsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMigrateUnbondingsResponse proto.InternalMessageInfo

type MsgToggleUnbondSwitch struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Denom   string `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
}

func (m *MsgToggleUnbondSwitch) Reset()         { *m = MsgToggleUnbondSwitch{} }
func (m *MsgToggleUnbondSwitch) String() string { return proto.CompactTextString(m) }
func (*MsgToggleUnbondSwitch) ProtoMessage()    {}
func (*MsgToggleUnbondSwitch) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{34}
}
func (m *MsgToggleUnbondSwitch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgToggleUnbondSwitch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgToggleUnbondSwitch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgToggleUnbondSwitch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgToggleUnbondSwitch.Merge(m, src)
}
func (m *MsgToggleUnbondSwitch) XXX_Size() int {
	return m.Size()
}
func (m *MsgToggleUnbondSwitch) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgToggleUnbondSwitch.DiscardUnknown(m)
}

var xxx_messageInfo_MsgToggleUnbondSwitch proto.InternalMessageInfo

func (m *MsgToggleUnbondSwitch) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgToggleUnbondSwitch) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

type MsgToggleUnbondSwitchResponse struct {
}

func (m *MsgToggleUnbondSwitchResponse) Reset()         { *m = MsgToggleUnbondSwitchResponse{} }
func (m *MsgToggleUnbondSwitchResponse) String() string { return proto.CompactTextString(m) }
func (*MsgToggleUnbondSwitchResponse) ProtoMessage()    {}
func (*MsgToggleUnbondSwitchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{35}
}
func (m *MsgToggleUnbondSwitchResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgToggleUnbondSwitchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgToggleUnbondSwitchResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgToggleUnbondSwitchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgToggleUnbondSwitchResponse.Merge(m, src)
}
func (m *MsgToggleUnbondSwitchResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgToggleUnbondSwitchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgToggleUnbondSwitchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgToggleUnbondSwitchResponse proto.InternalMessageInfo

type MsgUnsealMigrateInit struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgUnsealMigrateInit) Reset()         { *m = MsgUnsealMigrateInit{} }
func (m *MsgUnsealMigrateInit) String() string { return proto.CompactTextString(m) }
func (*MsgUnsealMigrateInit) ProtoMessage()    {}
func (*MsgUnsealMigrateInit) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{36}
}
func (m *MsgUnsealMigrateInit) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnsealMigrateInit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnsealMigrateInit.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnsealMigrateInit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnsealMigrateInit.Merge(m, src)
}
func (m *MsgUnsealMigrateInit) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnsealMigrateInit) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnsealMigrateInit.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnsealMigrateInit proto.InternalMessageInfo

func (m *MsgUnsealMigrateInit) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgUnsealMigrateInitResponse struct {
}

func (m *MsgUnsealMigrateInitResponse) Reset()         { *m = MsgUnsealMigrateInitResponse{} }
func (m *MsgUnsealMigrateInitResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUnsealMigrateInitResponse) ProtoMessage()    {}
func (*MsgUnsealMigrateInitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{37}
}
func (m *MsgUnsealMigrateInitResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnsealMigrateInitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnsealMigrateInitResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnsealMigrateInitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnsealMigrateInitResponse.Merge(m, src)
}
func (m *MsgUnsealMigrateInitResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnsealMigrateInitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnsealMigrateInitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnsealMigrateInitResponse proto.InternalMessageInfo

type MsgRegisterIcaPool struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Denom        string `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	ConnectionId string `protobuf:"bytes,3,opt,name=connectionId,proto3" json:"connectionId,omitempty"`
}

func (m *MsgRegisterIcaPool) Reset()         { *m = MsgRegisterIcaPool{} }
func (m *MsgRegisterIcaPool) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterIcaPool) ProtoMessage()    {}
func (*MsgRegisterIcaPool) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{38}
}
func (m *MsgRegisterIcaPool) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterIcaPool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterIcaPool.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterIcaPool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterIcaPool.Merge(m, src)
}
func (m *MsgRegisterIcaPool) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterIcaPool) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterIcaPool.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterIcaPool proto.InternalMessageInfo

func (m *MsgRegisterIcaPool) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRegisterIcaPool) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *MsgRegisterIcaPool) GetConnectionId() string {
	if m != nil {
		return m.ConnectionId
	}
	return ""
}

type MsgRegisterIcaPoolResponse struct {
}

func (m *MsgRegisterIcaPoolResponse) Reset()         { *m = MsgRegisterIcaPoolResponse{} }
func (m *MsgRegisterIcaPoolResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterIcaPoolResponse) ProtoMessage()    {}
func (*MsgRegisterIcaPoolResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{39}
}
func (m *MsgRegisterIcaPoolResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterIcaPoolResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterIcaPoolResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterIcaPoolResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterIcaPoolResponse.Merge(m, src)
}
func (m *MsgRegisterIcaPoolResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterIcaPoolResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterIcaPoolResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterIcaPoolResponse proto.InternalMessageInfo

type MsgSetWithdrawalAddr struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	DelegationAddr string `protobuf:"bytes,3,opt,name=delegationAddr,proto3" json:"delegationAddr,omitempty"`
}

func (m *MsgSetWithdrawalAddr) Reset()         { *m = MsgSetWithdrawalAddr{} }
func (m *MsgSetWithdrawalAddr) String() string { return proto.CompactTextString(m) }
func (*MsgSetWithdrawalAddr) ProtoMessage()    {}
func (*MsgSetWithdrawalAddr) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{40}
}
func (m *MsgSetWithdrawalAddr) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetWithdrawalAddr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetWithdrawalAddr.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetWithdrawalAddr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetWithdrawalAddr.Merge(m, src)
}
func (m *MsgSetWithdrawalAddr) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetWithdrawalAddr) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetWithdrawalAddr.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetWithdrawalAddr proto.InternalMessageInfo

func (m *MsgSetWithdrawalAddr) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetWithdrawalAddr) GetDelegationAddr() string {
	if m != nil {
		return m.DelegationAddr
	}
	return ""
}

type MsgSetWithdrawalAddrResponse struct {
}

func (m *MsgSetWithdrawalAddrResponse) Reset()         { *m = MsgSetWithdrawalAddrResponse{} }
func (m *MsgSetWithdrawalAddrResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetWithdrawalAddrResponse) ProtoMessage()    {}
func (*MsgSetWithdrawalAddrResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{41}
}
func (m *MsgSetWithdrawalAddrResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetWithdrawalAddrResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetWithdrawalAddrResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetWithdrawalAddrResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetWithdrawalAddrResponse.Merge(m, src)
}
func (m *MsgSetWithdrawalAddrResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetWithdrawalAddrResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetWithdrawalAddrResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetWithdrawalAddrResponse proto.InternalMessageInfo

type MsgInitPool struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Denom   string `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	Pool    string `protobuf:"bytes,3,opt,name=pool,proto3" json:"pool,omitempty"`
}

func (m *MsgInitPool) Reset()         { *m = MsgInitPool{} }
func (m *MsgInitPool) String() string { return proto.CompactTextString(m) }
func (*MsgInitPool) ProtoMessage()    {}
func (*MsgInitPool) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{42}
}
func (m *MsgInitPool) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInitPool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInitPool.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInitPool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInitPool.Merge(m, src)
}
func (m *MsgInitPool) XXX_Size() int {
	return m.Size()
}
func (m *MsgInitPool) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInitPool.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInitPool proto.InternalMessageInfo

func (m *MsgInitPool) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgInitPool) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *MsgInitPool) GetPool() string {
	if m != nil {
		return m.Pool
	}
	return ""
}

type MsgInitPoolResponse struct {
}

func (m *MsgInitPoolResponse) Reset()         { *m = MsgInitPoolResponse{} }
func (m *MsgInitPoolResponse) String() string { return proto.CompactTextString(m) }
func (*MsgInitPoolResponse) ProtoMessage()    {}
func (*MsgInitPoolResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{43}
}
func (m *MsgInitPoolResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInitPoolResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInitPoolResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInitPoolResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInitPoolResponse.Merge(m, src)
}
func (m *MsgInitPoolResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgInitPoolResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInitPoolResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInitPoolResponse proto.InternalMessageInfo

type MsgSetPoolStatus struct {
	Creator string     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Denom   string     `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	Pool    string     `protobuf:"bytes,3,opt,name=pool,proto3" json:"pool,omitempty"`
	Status  PoolStatus `protobuf:"varint,4,opt,name=status,proto3,enum=stafihub.stafihub.ledger.PoolStatus" json:"status,omitempty"`
}

func (m *MsgSetPoolStatus) Reset()         { *m = MsgSetPoolStatus{} }
func (m *MsgSetPoolStatus) String() string { return proto.CompactTextString(m) }
func (*MsgSetPoolStatus) ProtoMessage()    {}
func (*MsgSetPoolStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{44}
}
func (m *MsgSetPoolStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetPoolStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetPoolStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetPoolStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetPoolStatus.Merge(m, src)
}
func (m *MsgSetPoolStatus) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetPoolStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetPoolStatus.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetPoolStatus proto.InternalMessageInfo

func (m *MsgSetPoolStatus) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetPoolStatus) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *MsgSetPoolStatus) GetPool() string {
	if m != nil {
		return m.Pool
	}
	return ""
}

func (m *MsgSetPoolStatus) GetStatus() PoolStatus {
	if m != nil {
		return m.Status
	}
	return Active
}

type MsgSetPoolStatusResponse struct {
}

func (m *MsgSetPoolStatusResponse) Reset()         { *m = MsgSetPoolStatusResponse{} }
func (m *MsgSetPoolStatusResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetPoolStatusResponse) ProtoMessage()    {}
func (*MsgSetPoolStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b8bc55c5a1e7706, []int{45}
}
func (m *MsgSetPoolStatusResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetPoolStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetPoolStatusResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetPoolStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetPoolStatusResponse.Merge(m, src)
}
func (m *MsgSetPoolStatusResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetPoolStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetPoolStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetPoolStatusResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgSetEraUnbondLimit)(nil), "stafihub.stafihub.ledger.MsgSetEraUnbondLimit")
	proto.RegisterType((*MsgSetEraUnbondLimitResponse)(nil), "stafihub.stafihub.ledger.MsgSetEraUnbondLimitResponse")
	proto.RegisterType((*MsgSetPoolDetail)(nil), "stafihub.stafihub.ledger.MsgSetPoolDetail")
	proto.RegisterType((*MsgSetPoolDetailResponse)(nil), "stafihub.stafihub.ledger.MsgSetPoolDetailResponse")
	proto.RegisterType((*MsgSetLeastBond)(nil), "stafihub.stafihub.ledger.MsgSetLeastBond")
	proto.RegisterType((*MsgSetLeastBondResponse)(nil), "stafihub.stafihub.ledger.MsgSetLeastBondResponse")
	proto.RegisterType((*MsgClearCurrentEraSnapShots)(nil), "stafihub.stafihub.ledger.MsgClearCurrentEraSnapShots")
	proto.RegisterType((*MsgClearCurrentEraSnapShotsResponse)(nil), "stafihub.stafihub.ledger.MsgClearCurrentEraSnapShotsResponse")
	proto.RegisterType((*MsgSetStakingRewardCommission)(nil), "stafihub.stafihub.ledger.MsgSetStakingRewardCommission")
	proto.RegisterType((*MsgSetStakingRewardCommissionResponse)(nil), "stafihub.stafihub.ledger.MsgSetStakingRewardCommissionResponse")
	proto.RegisterType((*MsgSetProtocolFeeReceiver)(nil), "stafihub.stafihub.ledger.MsgSetProtocolFeeReceiver")
	proto.RegisterType((*MsgSetProtocolFeeReceiverResponse)(nil), "stafihub.stafihub.ledger.MsgSetProtocolFeeReceiverResponse")
	proto.RegisterType((*MsgSetUnbondRelayFee)(nil), "stafihub.stafihub.ledger.MsgSetUnbondRelayFee")
	proto.RegisterType((*MsgSetUnbondRelayFeeResponse)(nil), "stafihub.stafihub.ledger.MsgSetUnbondRelayFeeResponse")
	proto.RegisterType((*MsgLiquidityUnbond)(nil), "stafihub.stafihub.ledger.MsgLiquidityUnbond")
	proto.RegisterType((*MsgLiquidityUnbondResponse)(nil), "stafihub.stafihub.ledger.MsgLiquidityUnbondResponse")
	proto.RegisterType((*MsgSetUnbondCommission)(nil), "stafihub.stafihub.ledger.MsgSetUnbondCommission")
	proto.RegisterType((*MsgSetUnbondCommissionResponse)(nil), "stafihub.stafihub.ledger.MsgSetUnbondCommissionResponse")
	proto.RegisterType((*MsgSubmitSignature)(nil), "stafihub.stafihub.ledger.MsgSubmitSignature")
	proto.RegisterType((*MsgSubmitSignatureResponse)(nil), "stafihub.stafihub.ledger.MsgSubmitSignatureResponse")
	proto.RegisterType((*MsgSetRParams)(nil), "stafihub.stafihub.ledger.MsgSetRParams")
	proto.RegisterType((*MsgSetRParamsResponse)(nil), "stafihub.stafihub.ledger.MsgSetRParamsResponse")
	proto.RegisterType((*MsgSetRelayFeeReceiver)(nil), "stafihub.stafihub.ledger.MsgSetRelayFeeReceiver")
	proto.RegisterType((*MsgSetRelayFeeReceiverResponse)(nil), "stafihub.stafihub.ledger.MsgSetRelayFeeReceiverResponse")
	proto.RegisterType((*MsgSetRelayGasPrice)(nil), "stafihub.stafihub.ledger.MsgSetRelayGasPrice")
	proto.RegisterType((*MsgSetRelayGasPriceResponse)(nil), "stafihub.stafihub.ledger.MsgSetRelayGasPriceResponse")
	proto.RegisterType((*MsgSetEraSeconds)(nil), "stafihub.stafihub.ledger.MsgSetEraSeconds")
	proto.RegisterType((*MsgSetEraSecondsResponse)(nil), "stafihub.stafihub.ledger.MsgSetEraSecondsResponse")
	proto.RegisterType((*MsgRmBondedPool)(nil), "stafihub.stafihub.ledger.MsgRmBondedPool")
	proto.RegisterType((*MsgRmBondedPoolResponse)(nil), "stafihub.stafihub.ledger.MsgRmBondedPoolResponse")
	proto.RegisterType((*MsgMigrateInit)(nil), "stafihub.stafihub.ledger.MsgMigrateInit")
	proto.RegisterType((*MsgMigrateInitResponse)(nil), "stafihub.stafihub.ledger.MsgMigrateInitResponse")
	proto.RegisterType((*MsgMigrateUnbondings)(nil), "stafihub.stafihub.ledger.MsgMigrateUnbondings")
	proto.RegisterType((*MsgMigrateUnbondingsResponse)(nil), "stafihub.stafihub.ledger.MsgMigrateUnbondingsResponse")
	proto.RegisterType((*MsgToggleUnbondSwitch)(nil), "stafihub.stafihub.ledger.MsgToggleUnbondSwitch")
	proto.RegisterType((*MsgToggleUnbondSwitchResponse)(nil), "stafihub.stafihub.ledger.MsgToggleUnbondSwitchResponse")
	proto.RegisterType((*MsgUnsealMigrateInit)(nil), "stafihub.stafihub.ledger.MsgUnsealMigrateInit")
	proto.RegisterType((*MsgUnsealMigrateInitResponse)(nil), "stafihub.stafihub.ledger.MsgUnsealMigrateInitResponse")
	proto.RegisterType((*MsgRegisterIcaPool)(nil), "stafihub.stafihub.ledger.MsgRegisterIcaPool")
	proto.RegisterType((*MsgRegisterIcaPoolResponse)(nil), "stafihub.stafihub.ledger.MsgRegisterIcaPoolResponse")
	proto.RegisterType((*MsgSetWithdrawalAddr)(nil), "stafihub.stafihub.ledger.MsgSetWithdrawalAddr")
	proto.RegisterType((*MsgSetWithdrawalAddrResponse)(nil), "stafihub.stafihub.ledger.MsgSetWithdrawalAddrResponse")
	proto.RegisterType((*MsgInitPool)(nil), "stafihub.stafihub.ledger.MsgInitPool")
	proto.RegisterType((*MsgInitPoolResponse)(nil), "stafihub.stafihub.ledger.MsgInitPoolResponse")
	proto.RegisterType((*MsgSetPoolStatus)(nil), "stafihub.stafihub.ledger.MsgSetPoolStatus")
	proto.RegisterType((*MsgSetPoolStatusResponse)(nil), "stafihub.stafihub.ledger.MsgSetPoolStatusResponse")
}

func init() { proto.RegisterFile("stafihub/stafihub/ledger/tx.proto", fileDescriptor_8b8bc55c5a1e7706) }

var fileDescriptor_8b8bc55c5a1e7706 = []byte{
	// 1717 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x59, 0xcb, 0x6f, 0xdb, 0x46,
	0x1a, 0x37, 0x63, 0x59, 0x8e, 0x3f, 0xc7, 0x4e, 0x96, 0x79, 0xd1, 0xdc, 0x44, 0x72, 0x94, 0x75,
	0xe2, 0x4d, 0x36, 0x52, 0xe2, 0x6c, 0x36, 0x0b, 0xec, 0x06, 0xbb, 0xb1, 0xf3, 0x80, 0x81, 0x68,
	0xd7, 0x4b, 0x25, 0xd8, 0x45, 0xf6, 0xd0, 0x8c, 0xc8, 0x31, 0x45, 0x84, 0xe2, 0xa8, 0x9c, 0xa1,
	0x63, 0xa3, 0x40, 0x81, 0x5e, 0x7b, 0xca, 0xa1, 0x28, 0x7a, 0xeb, 0xa9, 0x40, 0xd1, 0x3f, 0xa1,
	0xc7, 0x9e, 0x72, 0xcc, 0xa5, 0x40, 0xd1, 0x83, 0x50, 0x24, 0x37, 0xf7, 0x3f, 0x28, 0x7a, 0x28,
	0x48, 0x8e, 0x46, 0x24, 0x25, 0x92, 0xa2, 0x90, 0x02, 0xbd, 0x58, 0xe4, 0xf0, 0xf7, 0x3d, 0x67,
	0xbe, 0xd7, 0x18, 0x2e, 0x50, 0x86, 0x76, 0xad, 0x8e, 0xd7, 0x6e, 0x88, 0x07, 0x1b, 0x1b, 0x26,
	0x76, 0x1b, 0x6c, 0xbf, 0xde, 0x73, 0x09, 0x23, 0xb2, 0x32, 0xf8, 0x52, 0x17, 0x0f, 0x21, 0x44,
	0x5d, 0x31, 0x09, 0x31, 0x6d, 0xdc, 0x08, 0x70, 0x6d, 0x6f, 0xb7, 0x81, 0x9c, 0x83, 0x90, 0x48,
	0x3d, 0x65, 0x12, 0x93, 0x04, 0x8f, 0x0d, 0xff, 0x89, 0xaf, 0xae, 0xa5, 0x4a, 0x0b, 0x7f, 0x38,
	0xac, 0xa2, 0x13, 0xda, 0x25, 0xb4, 0xd1, 0x46, 0x14, 0x37, 0xf6, 0x6e, 0xb4, 0x31, 0x43, 0x37,
	0x1a, 0x3a, 0xb1, 0x9c, 0xf0, 0x7b, 0xcd, 0x84, 0x53, 0x4d, 0x6a, 0xb6, 0x30, 0xbb, 0xef, 0xa2,
	0x27, 0x4e, 0x9b, 0x38, 0xc6, 0x23, 0xab, 0x6b, 0x31, 0x59, 0x81, 0x79, 0xdd, 0xc5, 0x88, 0x11,
	0x57, 0x91, 0x56, 0xa5, 0xf5, 0x05, 0x6d, 0xf0, 0x2a, 0x9f, 0x82, 0x39, 0x03, 0x3b, 0xa4, 0xab,
	0x1c, 0x09, 0xd6, 0xc3, 0x17, 0xb9, 0x0a, 0x73, 0xb6, 0x4f, 0xa8, 0xcc, 0xae, 0x4a, 0xeb, 0x4b,
	0x9b, 0x0b, 0x87, 0xfd, 0x6a, 0xb8, 0xa0, 0x85, 0x3f, 0xb5, 0x0a, 0x9c, 0x1b, 0x27, 0x48, 0xc3,
	0xb4, 0x47, 0x1c, 0x8a, 0x6b, 0x5f, 0x48, 0x70, 0x22, 0x04, 0xec, 0x10, 0x62, 0xdf, 0xc3, 0x0c,
	0x59, 0x76, 0x61, 0x2d, 0x64, 0x28, 0xf5, 0x08, 0xb1, 0x03, 0x25, 0x16, 0xb4, 0xe0, 0x59, 0x5e,
	0x85, 0x45, 0xea, 0xb5, 0xef, 0xea, 0x3a, 0xf1, 0x1c, 0x46, 0x95, 0xd2, 0xea, 0xec, 0xfa, 0x82,
	0x16, 0x5d, 0x92, 0xaf, 0xc2, 0x02, 0xeb, 0xb8, 0x98, 0x76, 0x88, 0x6d, 0x28, 0x73, 0x81, 0xfe,
	0x4b, 0x87, 0xfd, 0xea, 0x70, 0x51, 0x1b, 0x3e, 0xd6, 0x54, 0x50, 0x92, 0x6a, 0x0a, 0x1b, 0xde,
	0x83, 0xe3, 0xe1, 0xb7, 0x47, 0x18, 0x51, 0xb6, 0x49, 0x1c, 0xa3, 0xb0, 0x05, 0xe7, 0x60, 0xc1,
	0x1e, 0x10, 0x73, 0x33, 0x86, 0x0b, 0xb5, 0x15, 0x38, 0x9b, 0x10, 0x20, 0x64, 0x37, 0xe1, 0xf7,
	0x4d, 0x6a, 0x6e, 0xd9, 0x18, 0xb9, 0x5b, 0x9e, 0xeb, 0x62, 0xc7, 0x77, 0x74, 0xcb, 0x41, 0xbd,
	0x56, 0x87, 0x30, 0x5a, 0x54, 0x8f, 0xda, 0x1a, 0x5c, 0xcc, 0x60, 0x27, 0xa4, 0x7e, 0x2e, 0xc1,
	0xf9, 0x50, 0xa3, 0x16, 0x43, 0xcf, 0x2d, 0xc7, 0xd4, 0xf0, 0x0b, 0xe4, 0x1a, 0x5b, 0xa4, 0xdb,
	0xb5, 0x28, 0xb5, 0x88, 0x53, 0xd8, 0x01, 0xff, 0x02, 0xd0, 0x05, 0x75, 0xe8, 0x81, 0xcd, 0xfa,
	0xab, 0x7e, 0x75, 0xe6, 0xfb, 0x7e, 0xf5, 0x92, 0x69, 0x31, 0x3f, 0x66, 0x74, 0xd2, 0x6d, 0x8c,
	0x1e, 0x7f, 0x8f, 0x59, 0x36, 0xad, 0xdf, 0xc3, 0xba, 0x16, 0xe1, 0x50, 0xbb, 0x0c, 0x6b, 0x99,
	0x0a, 0x0a, 0x53, 0xfe, 0x03, 0x2b, 0x7c, 0x63, 0xfd, 0xc0, 0xd0, 0x89, 0xfd, 0x00, 0x63, 0x0d,
	0xeb, 0xd8, 0xda, 0xc3, 0x6e, 0x86, 0x15, 0x2a, 0x1c, 0x75, 0x39, 0x8a, 0x1b, 0x22, 0xde, 0x6b,
	0x17, 0xe1, 0x42, 0x2a, 0x4b, 0x21, 0xf7, 0x4b, 0x69, 0x10, 0x82, 0x61, 0x58, 0x68, 0xd8, 0x46,
	0x07, 0x0f, 0x30, 0x2e, 0xec, 0xb9, 0x67, 0x30, 0xb7, 0x87, 0x6c, 0x0f, 0x07, 0x4e, 0x5b, 0xdc,
	0x58, 0xa9, 0x87, 0xa1, 0x5f, 0xf7, 0x43, 0xbf, 0xce, 0x43, 0xbf, 0xbe, 0x45, 0x2c, 0x67, 0xb3,
	0xc1, 0xfd, 0x79, 0x39, 0xe2, 0x4f, 0x9e, 0x27, 0xc2, 0x9f, 0x6b, 0xd4, 0x78, 0xde, 0x60, 0x07,
	0x3d, 0x4c, 0x03, 0x02, 0x2d, 0x64, 0x3c, 0x8c, 0xe1, 0xb8, 0xa6, 0xc2, 0x94, 0x6f, 0x24, 0x90,
	0x9b, 0xd4, 0x7c, 0x64, 0xbd, 0xef, 0x59, 0x86, 0xc5, 0x0e, 0x42, 0x58, 0x86, 0x21, 0x83, 0x78,
	0x3d, 0x12, 0x89, 0xd7, 0x5f, 0xdd, 0x0c, 0x3f, 0xc6, 0x5c, 0xac, 0x5b, 0x3d, 0x0b, 0x3b, 0x4c,
	0x29, 0x85, 0x31, 0x26, 0x16, 0x6a, 0xe7, 0x40, 0x1d, 0xb5, 0x41, 0x98, 0xf8, 0x99, 0x04, 0x67,
	0xa2, 0x3e, 0xf8, 0x0d, 0x9d, 0xf4, 0x55, 0xa8, 0x8c, 0xd7, 0x4c, 0x28, 0xff, 0x63, 0xb8, 0x3f,
	0x2d, 0xaf, 0xdd, 0xb5, 0x58, 0xcb, 0x32, 0x1d, 0xc4, 0x3c, 0xb7, 0xf8, 0x41, 0x5b, 0x81, 0x59,
	0xec, 0x22, 0x9e, 0xe9, 0xe7, 0x0f, 0xfb, 0x55, 0xff, 0x55, 0xf3, 0xff, 0x88, 0x0d, 0x2d, 0x45,
	0x36, 0xf4, 0x9f, 0x50, 0x66, 0xfb, 0x8f, 0x0f, 0x7a, 0x38, 0xc8, 0xad, 0xcb, 0x1b, 0xeb, 0xf5,
	0xb4, 0x2a, 0x58, 0xff, 0xb7, 0x6b, 0x99, 0x96, 0x83, 0xec, 0xc7, 0x01, 0x5e, 0xe3, 0x74, 0xf2,
	0x19, 0x28, 0xf7, 0x5c, 0xd2, 0xdb, 0x36, 0x94, 0x72, 0xc0, 0x97, 0xbf, 0xf9, 0x1b, 0x49, 0x07,
	0x56, 0x28, 0xf3, 0xe1, 0x46, 0x8a, 0x05, 0xbe, 0x91, 0x09, 0x63, 0x85, 0x2f, 0x7e, 0x96, 0x60,
	0x29, 0x74, 0x97, 0xb6, 0x83, 0x5c, 0xd4, 0x2d, 0x9c, 0x22, 0xfd, 0xc8, 0x37, 0x11, 0xdd, 0x71,
	0x2d, 0x1d, 0xf3, 0x4c, 0x2d, 0xde, 0xe5, 0x0a, 0x00, 0x76, 0x51, 0x0b, 0xeb, 0xc4, 0x31, 0x68,
	0xe0, 0x8d, 0x25, 0x2d, 0xb2, 0x22, 0xd7, 0xa0, 0x4c, 0x76, 0x77, 0x29, 0x66, 0x81, 0x4f, 0xe6,
	0x36, 0xe1, 0xb0, 0x5f, 0xe5, 0x2b, 0x1a, 0xff, 0x95, 0xef, 0xc0, 0x71, 0x7f, 0x1f, 0x2d, 0xc7,
	0xbc, 0xe7, 0xb9, 0x88, 0xf9, 0x87, 0xa4, 0x1c, 0xb8, 0xfc, 0xe4, 0x61, 0xbf, 0x9a, 0xfc, 0xa4,
	0x25, 0x17, 0xe2, 0x95, 0x64, 0x3e, 0x59, 0x49, 0xce, 0xc2, 0xe9, 0x98, 0xf5, 0xc2, 0x2f, 0xc6,
	0xe0, 0x7c, 0x0f, 0xa3, 0x3b, 0x37, 0x07, 0xa6, 0xfa, 0x47, 0x64, 0xc6, 0xd9, 0x44, 0x66, 0x14,
	0x67, 0x35, 0x29, 0x45, 0xe8, 0x81, 0xe0, 0x64, 0x04, 0xf1, 0x70, 0xe0, 0xd8, 0x77, 0xb8, 0x49,
	0xb5, 0xf3, 0x41, 0xc9, 0x4c, 0x8a, 0x10, 0x1a, 0x7c, 0x2b, 0x3a, 0x92, 0xfb, 0xc3, 0x8d, 0x2b,
	0x2a, 0xbf, 0x1e, 0x3b, 0x08, 0x61, 0xc8, 0x2c, 0x1f, 0xf6, 0xab, 0x91, 0xd5, 0xd8, 0xc1, 0x18,
	0xb3, 0xe9, 0xa5, 0x02, 0x9b, 0x3e, 0xc1, 0xb9, 0x1a, 0x76, 0x30, 0x43, 0xb3, 0x84, 0xcd, 0xff,
	0x0f, 0x3a, 0x18, 0xad, 0xeb, 0x9f, 0x11, 0x6c, 0xf8, 0x2d, 0x4e, 0x61, 0x8b, 0x15, 0x98, 0x47,
	0x86, 0xe1, 0x62, 0x4a, 0xb9, 0xc3, 0x07, 0xaf, 0xbc, 0x7b, 0x89, 0x32, 0x17, 0x72, 0xbf, 0x2a,
	0xc1, 0x72, 0x93, 0x9a, 0x4d, 0xcb, 0x74, 0x11, 0xc3, 0xdb, 0xce, 0x14, 0x1d, 0xe8, 0xb8, 0xde,
	0x6f, 0x07, 0x16, 0x19, 0x61, 0xc8, 0x6e, 0x79, 0xbd, 0x9e, 0x7d, 0x10, 0x66, 0xa5, 0xb1, 0x39,
	0x36, 0xad, 0x6c, 0x6c, 0x3b, 0x4c, 0x8b, 0xb2, 0x90, 0x1f, 0x40, 0x19, 0xe9, 0xcc, 0xda, 0x0b,
	0x93, 0x59, 0x71, 0x66, 0x9c, 0x5a, 0xde, 0x84, 0x92, 0xbf, 0x77, 0x61, 0x42, 0x2b, 0xcc, 0x25,
	0xa0, 0xf5, 0x75, 0xf1, 0x82, 0x54, 0x1f, 0x86, 0x77, 0x71, 0x5d, 0x42, 0x6a, 0x59, 0x83, 0x63,
	0x78, 0x5f, 0xef, 0x20, 0xc7, 0xc4, 0x1a, 0x62, 0x58, 0x39, 0x3a, 0x55, 0x29, 0x8a, 0xf1, 0x90,
	0x9f, 0xc2, 0x89, 0xc0, 0x6d, 0x91, 0xce, 0x47, 0x59, 0x98, 0x4a, 0xcb, 0x11, 0x3e, 0x35, 0x25,
	0x48, 0x51, 0x91, 0xb3, 0x22, 0x8e, 0xd1, 0xd7, 0x61, 0x2f, 0xc5, 0x3f, 0x85, 0x75, 0xd0, 0x72,
	0x4c, 0xfa, 0x4e, 0x0e, 0x13, 0x2f, 0x7b, 0xa5, 0x31, 0x65, 0x6f, 0x0b, 0xc0, 0x13, 0xc2, 0x94,
	0xb9, 0xd5, 0xd9, 0xf5, 0xc5, 0x8d, 0x8b, 0xe9, 0x65, 0x4e, 0x28, 0xa6, 0x45, 0xc8, 0x78, 0x77,
	0x35, 0xa2, 0xbb, 0x30, 0xee, 0x61, 0x90, 0xb2, 0x1f, 0x13, 0xd3, 0xb4, 0xf9, 0xe7, 0xd6, 0x0b,
	0x8b, 0xe9, 0x9d, 0xc2, 0xbd, 0x7d, 0x35, 0xe8, 0xd9, 0x47, 0x19, 0x09, 0x49, 0xd7, 0x03, 0x2f,
	0x3e, 0x71, 0x28, 0x46, 0xf6, 0x44, 0x21, 0xc9, 0x75, 0x1f, 0xa1, 0x10, 0x1c, 0x3b, 0x41, 0xe3,
	0xa1, 0x61, 0xd3, 0xa2, 0x0c, 0xbb, 0xdb, 0x3a, 0x9a, 0x2a, 0xb5, 0xd4, 0xe0, 0x98, 0x4e, 0x1c,
	0x07, 0xeb, 0x7e, 0xae, 0xdb, 0x1e, 0xcc, 0x47, 0xb1, 0x35, 0x5e, 0xf5, 0x13, 0x92, 0x84, 0x1e,
	0xff, 0x1b, 0xf4, 0xda, 0xff, 0xb5, 0x58, 0xc7, 0x70, 0xd1, 0x0b, 0x64, 0xdf, 0x35, 0x8c, 0xac,
	0xda, 0x76, 0x09, 0x96, 0x0d, 0x6c, 0x63, 0x33, 0xc8, 0xaf, 0x3e, 0x96, 0x4b, 0x4d, 0xac, 0x0e,
	0x7b, 0xe3, 0x38, 0xe7, 0xc8, 0x78, 0xb1, 0xd8, 0xa4, 0xa6, 0xef, 0x94, 0xa9, 0x4c, 0x1f, 0x73,
	0x20, 0x6b, 0xa7, 0x83, 0x12, 0x39, 0x60, 0x29, 0x24, 0x7d, 0x12, 0x9b, 0xa4, 0x5b, 0x0c, 0x31,
	0xef, 0xdd, 0x04, 0xc0, 0xdf, 0xa1, 0x4c, 0x03, 0x6e, 0x41, 0x0c, 0x2c, 0x6f, 0xfc, 0x21, 0xfd,
	0x84, 0x0f, 0x25, 0x6b, 0x9c, 0x26, 0x3e, 0x38, 0xf3, 0x6f, 0x5c, 0xe5, 0x8d, 0x9f, 0x4e, 0xc3,
	0x6c, 0x93, 0x9a, 0xf2, 0x07, 0xf0, 0xbb, 0xd1, 0xab, 0x88, 0x7a, 0xba, 0x98, 0x71, 0x37, 0x0a,
	0xea, 0x5f, 0x8a, 0xe1, 0x07, 0x4a, 0xc8, 0x04, 0x96, 0xe2, 0xb7, 0x0f, 0x57, 0xf2, 0x18, 0x0d,
	0xb1, 0xea, 0xc6, 0xe4, 0x58, 0x21, 0xd0, 0x86, 0x63, 0xb1, 0xbb, 0x82, 0x3f, 0xe6, 0xf1, 0x10,
	0x50, 0xf5, 0xc6, 0xc4, 0x50, 0x21, 0xed, 0xa5, 0x04, 0x4a, 0xea, 0xf5, 0xc0, 0xad, 0x4c, 0x7e,
	0x69, 0x64, 0xea, 0x9d, 0xa9, 0xc8, 0x84, 0x4a, 0x9f, 0x4a, 0xa0, 0x66, 0x5c, 0x1d, 0xdc, 0xce,
	0x33, 0x32, 0x85, 0x50, 0xfd, 0xc7, 0x94, 0x84, 0x42, 0xb1, 0x8f, 0x25, 0x38, 0x93, 0x72, 0x13,
	0x70, 0x33, 0x77, 0xa3, 0x47, 0x89, 0xd4, 0xbf, 0x4d, 0x41, 0x24, 0x94, 0x09, 0x83, 0x22, 0x71,
	0x39, 0x90, 0x1b, 0x14, 0x71, 0x7c, 0x7e, 0x50, 0x8c, 0x1f, 0xe9, 0x65, 0x0f, 0x8e, 0x27, 0xc7,
	0xf9, 0x3f, 0x65, 0xb2, 0x4a, 0xa0, 0xd5, 0x3f, 0x17, 0x41, 0x0b, 0xb1, 0x1f, 0x49, 0x70, 0x72,
	0xdc, 0x8c, 0x7d, 0x7d, 0x32, 0x33, 0x22, 0x67, 0xe1, 0xaf, 0x45, 0x29, 0xa2, 0xa6, 0x27, 0x27,
	0xe5, 0x6c, 0xd3, 0x13, 0xe8, 0x1c, 0xd3, 0x53, 0x06, 0x53, 0x79, 0x17, 0x20, 0x32, 0x94, 0x5e,
	0xce, 0x53, 0x9f, 0x03, 0xd5, 0xc6, 0x84, 0xc0, 0xa4, 0x8b, 0x47, 0xc6, 0xbc, 0x5c, 0x17, 0x27,
	0x29, 0xf2, 0x5d, 0x9c, 0x36, 0xe4, 0xc9, 0xfb, 0x70, 0x62, 0x64, 0xc2, 0xbb, 0x36, 0x11, 0xb7,
	0x01, 0x5c, 0xbd, 0x55, 0x08, 0x9e, 0x48, 0xf6, 0x91, 0xc1, 0xee, 0xca, 0x04, 0x55, 0x83, 0x63,
	0xf3, 0x93, 0xfd, 0xe8, 0x64, 0xe5, 0x27, 0xfb, 0xd8, 0x58, 0x95, 0x9d, 0xec, 0xa3, 0xd0, 0x9c,
	0x64, 0x3f, 0x6e, 0x9e, 0x92, 0x2d, 0x58, 0x8c, 0x36, 0x6e, 0xeb, 0x99, 0x1c, 0x22, 0x48, 0xf5,
	0xfa, 0xa4, 0xc8, 0x68, 0x7a, 0x1a, 0xed, 0xb7, 0xeb, 0x93, 0xb0, 0x19, 0xe2, 0x73, 0xd2, 0x53,
	0x6a, 0x4f, 0x2c, 0x7f, 0x08, 0xf2, 0x98, 0x86, 0x38, 0x3b, 0x16, 0x46, 0x09, 0xd4, 0xdb, 0x05,
	0x09, 0xa2, 0xc6, 0x8f, 0xb6, 0xc9, 0xd9, 0xc6, 0x8f, 0xe0, 0x73, 0x8c, 0x4f, 0x6d, 0xaa, 0xfd,
	0x04, 0x95, 0xec, 0xa8, 0xb3, 0x13, 0x54, 0x02, 0x9d, 0x93, 0xa0, 0x52, 0x7a, 0x68, 0x5e, 0x8f,
	0x12, 0x0d, 0x74, 0x6e, 0x3d, 0x8a, 0xe3, 0xf3, 0xeb, 0xd1, 0xf8, 0x36, 0x5a, 0x7e, 0x06, 0x47,
	0x45, 0x0f, 0xbd, 0x96, 0xc9, 0x63, 0x00, 0x53, 0xaf, 0x4d, 0x04, 0x1b, 0xd3, 0x06, 0xf2, 0xd6,
	0x79, 0xa2, 0x36, 0x30, 0xc4, 0x4e, 0xd6, 0x06, 0xc6, 0x9b, 0xdf, 0xcd, 0xfb, 0xaf, 0xde, 0x54,
	0xa4, 0xd7, 0x6f, 0x2a, 0xd2, 0x0f, 0x6f, 0x2a, 0xd2, 0xcb, 0xb7, 0x95, 0x99, 0xd7, 0x6f, 0x2b,
	0x33, 0xdf, 0xbd, 0xad, 0xcc, 0x3c, 0xbd, 0x9a, 0x39, 0x7a, 0xef, 0x8b, 0x7f, 0x2f, 0xfa, 0xb3,
	0x72, 0xbb, 0x1c, 0xfc, 0x43, 0xef, 0xe6, 0x2f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x8c, 0x5e, 0x82,
	0x8d, 0x87, 0x1c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	SetEraUnbondLimit(ctx context.Context, in *MsgSetEraUnbondLimit, opts ...grpc.CallOption) (*MsgSetEraUnbondLimitResponse, error)
	SetPoolDetail(ctx context.Context, in *MsgSetPoolDetail, opts ...grpc.CallOption) (*MsgSetPoolDetailResponse, error)
	SetLeastBond(ctx context.Context, in *MsgSetLeastBond, opts ...grpc.CallOption) (*MsgSetLeastBondResponse, error)
	ClearCurrentEraSnapShots(ctx context.Context, in *MsgClearCurrentEraSnapShots, opts ...grpc.CallOption) (*MsgClearCurrentEraSnapShotsResponse, error)
	SetStakingRewardCommission(ctx context.Context, in *MsgSetStakingRewardCommission, opts ...grpc.CallOption) (*MsgSetStakingRewardCommissionResponse, error)
	SetProtocolFeeReceiver(ctx context.Context, in *MsgSetProtocolFeeReceiver, opts ...grpc.CallOption) (*MsgSetProtocolFeeReceiverResponse, error)
	SetUnbondRelayFee(ctx context.Context, in *MsgSetUnbondRelayFee, opts ...grpc.CallOption) (*MsgSetUnbondRelayFeeResponse, error)
	LiquidityUnbond(ctx context.Context, in *MsgLiquidityUnbond, opts ...grpc.CallOption) (*MsgLiquidityUnbondResponse, error)
	SetUnbondCommission(ctx context.Context, in *MsgSetUnbondCommission, opts ...grpc.CallOption) (*MsgSetUnbondCommissionResponse, error)
	SubmitSignature(ctx context.Context, in *MsgSubmitSignature, opts ...grpc.CallOption) (*MsgSubmitSignatureResponse, error)
	SetRParams(ctx context.Context, in *MsgSetRParams, opts ...grpc.CallOption) (*MsgSetRParamsResponse, error)
	SetRelayFeeReceiver(ctx context.Context, in *MsgSetRelayFeeReceiver, opts ...grpc.CallOption) (*MsgSetRelayFeeReceiverResponse, error)
	SetRelayGasPrice(ctx context.Context, in *MsgSetRelayGasPrice, opts ...grpc.CallOption) (*MsgSetRelayGasPriceResponse, error)
	SetEraSeconds(ctx context.Context, in *MsgSetEraSeconds, opts ...grpc.CallOption) (*MsgSetEraSecondsResponse, error)
	RmBondedPool(ctx context.Context, in *MsgRmBondedPool, opts ...grpc.CallOption) (*MsgRmBondedPoolResponse, error)
	MigrateInit(ctx context.Context, in *MsgMigrateInit, opts ...grpc.CallOption) (*MsgMigrateInitResponse, error)
	MigrateUnbondings(ctx context.Context, in *MsgMigrateUnbondings, opts ...grpc.CallOption) (*MsgMigrateUnbondingsResponse, error)
	ToggleUnbondSwitch(ctx context.Context, in *MsgToggleUnbondSwitch, opts ...grpc.CallOption) (*MsgToggleUnbondSwitchResponse, error)
	UnsealMigrateInit(ctx context.Context, in *MsgUnsealMigrateInit, opts ...grpc.CallOption) (*MsgUnsealMigrateInitResponse, error)
	RegisterIcaPool(ctx context.Context, in *MsgRegisterIcaPool, opts ...grpc.CallOption) (*MsgRegisterIcaPoolResponse, error)
	SetWithdrawalAddr(ctx context.Context, in *MsgSetWithdrawalAddr, opts ...grpc.CallOption) (*MsgSetWithdrawalAddrResponse, error)
	InitPool(ctx context.Context, in *MsgInitPool, opts ...grpc.CallOption) (*MsgInitPoolResponse, error)
	SetPoolStatus(ctx context.Context, in *MsgSetPoolStatus, opts ...grpc.CallOption) (*MsgSetPoolStatusResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) SetEraUnbondLimit(ctx context.Context, in *MsgSetEraUnbondLimit, opts ...grpc.CallOption) (*MsgSetEraUnbondLimitResponse, error) {
	out := new(MsgSetEraUnbondLimitResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.ledger.Msg/SetEraUnbondLimit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetPoolDetail(ctx context.Context, in *MsgSetPoolDetail, opts ...grpc.CallOption) (*MsgSetPoolDetailResponse, error) {
	out := new(MsgSetPoolDetailResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.ledger.Msg/SetPoolDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetLeastBond(ctx context.Context, in *MsgSetLeastBond, opts ...grpc.CallOption) (*MsgSetLeastBondResponse, error) {
	out := new(MsgSetLeastBondResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.ledger.Msg/SetLeastBond", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ClearCurrentEraSnapShots(ctx context.Context, in *MsgClearCurrentEraSnapShots, opts ...grpc.CallOption) (*MsgClearCurrentEraSnapShotsResponse, error) {
	out := new(MsgClearCurrentEraSnapShotsResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.ledger.Msg/ClearCurrentEraSnapShots", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetStakingRewardCommission(ctx context.Context, in *MsgSetStakingRewardCommission, opts ...grpc.CallOption) (*MsgSetStakingRewardCommissionResponse, error) {
	out := new(MsgSetStakingRewardCommissionResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.ledger.Msg/SetStakingRewardCommission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetProtocolFeeReceiver(ctx context.Context, in *MsgSetProtocolFeeReceiver, opts ...grpc.CallOption) (*MsgSetProtocolFeeReceiverResponse, error) {
	out := new(MsgSetProtocolFeeReceiverResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.ledger.Msg/SetProtocolFeeReceiver", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetUnbondRelayFee(ctx context.Context, in *MsgSetUnbondRelayFee, opts ...grpc.CallOption) (*MsgSetUnbondRelayFeeResponse, error) {
	out := new(MsgSetUnbondRelayFeeResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.ledger.Msg/SetUnbondRelayFee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) LiquidityUnbond(ctx context.Context, in *MsgLiquidityUnbond, opts ...grpc.CallOption) (*MsgLiquidityUnbondResponse, error) {
	out := new(MsgLiquidityUnbondResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.ledger.Msg/LiquidityUnbond", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetUnbondCommission(ctx context.Context, in *MsgSetUnbondCommission, opts ...grpc.CallOption) (*MsgSetUnbondCommissionResponse, error) {
	out := new(MsgSetUnbondCommissionResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.ledger.Msg/SetUnbondCommission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SubmitSignature(ctx context.Context, in *MsgSubmitSignature, opts ...grpc.CallOption) (*MsgSubmitSignatureResponse, error) {
	out := new(MsgSubmitSignatureResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.ledger.Msg/SubmitSignature", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetRParams(ctx context.Context, in *MsgSetRParams, opts ...grpc.CallOption) (*MsgSetRParamsResponse, error) {
	out := new(MsgSetRParamsResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.ledger.Msg/SetRParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetRelayFeeReceiver(ctx context.Context, in *MsgSetRelayFeeReceiver, opts ...grpc.CallOption) (*MsgSetRelayFeeReceiverResponse, error) {
	out := new(MsgSetRelayFeeReceiverResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.ledger.Msg/SetRelayFeeReceiver", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetRelayGasPrice(ctx context.Context, in *MsgSetRelayGasPrice, opts ...grpc.CallOption) (*MsgSetRelayGasPriceResponse, error) {
	out := new(MsgSetRelayGasPriceResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.ledger.Msg/SetRelayGasPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetEraSeconds(ctx context.Context, in *MsgSetEraSeconds, opts ...grpc.CallOption) (*MsgSetEraSecondsResponse, error) {
	out := new(MsgSetEraSecondsResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.ledger.Msg/SetEraSeconds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RmBondedPool(ctx context.Context, in *MsgRmBondedPool, opts ...grpc.CallOption) (*MsgRmBondedPoolResponse, error) {
	out := new(MsgRmBondedPoolResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.ledger.Msg/RmBondedPool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MigrateInit(ctx context.Context, in *MsgMigrateInit, opts ...grpc.CallOption) (*MsgMigrateInitResponse, error) {
	out := new(MsgMigrateInitResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.ledger.Msg/MigrateInit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MigrateUnbondings(ctx context.Context, in *MsgMigrateUnbondings, opts ...grpc.CallOption) (*MsgMigrateUnbondingsResponse, error) {
	out := new(MsgMigrateUnbondingsResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.ledger.Msg/MigrateUnbondings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ToggleUnbondSwitch(ctx context.Context, in *MsgToggleUnbondSwitch, opts ...grpc.CallOption) (*MsgToggleUnbondSwitchResponse, error) {
	out := new(MsgToggleUnbondSwitchResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.ledger.Msg/ToggleUnbondSwitch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UnsealMigrateInit(ctx context.Context, in *MsgUnsealMigrateInit, opts ...grpc.CallOption) (*MsgUnsealMigrateInitResponse, error) {
	out := new(MsgUnsealMigrateInitResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.ledger.Msg/UnsealMigrateInit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RegisterIcaPool(ctx context.Context, in *MsgRegisterIcaPool, opts ...grpc.CallOption) (*MsgRegisterIcaPoolResponse, error) {
	out := new(MsgRegisterIcaPoolResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.ledger.Msg/RegisterIcaPool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetWithdrawalAddr(ctx context.Context, in *MsgSetWithdrawalAddr, opts ...grpc.CallOption) (*MsgSetWithdrawalAddrResponse, error) {
	out := new(MsgSetWithdrawalAddrResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.ledger.Msg/SetWithdrawalAddr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) InitPool(ctx context.Context, in *MsgInitPool, opts ...grpc.CallOption) (*MsgInitPoolResponse, error) {
	out := new(MsgInitPoolResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.ledger.Msg/InitPool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetPoolStatus(ctx context.Context, in *MsgSetPoolStatus, opts ...grpc.CallOption) (*MsgSetPoolStatusResponse, error) {
	out := new(MsgSetPoolStatusResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.ledger.Msg/SetPoolStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	SetEraUnbondLimit(context.Context, *MsgSetEraUnbondLimit) (*MsgSetEraUnbondLimitResponse, error)
	SetPoolDetail(context.Context, *MsgSetPoolDetail) (*MsgSetPoolDetailResponse, error)
	SetLeastBond(context.Context, *MsgSetLeastBond) (*MsgSetLeastBondResponse, error)
	ClearCurrentEraSnapShots(context.Context, *MsgClearCurrentEraSnapShots) (*MsgClearCurrentEraSnapShotsResponse, error)
	SetStakingRewardCommission(context.Context, *MsgSetStakingRewardCommission) (*MsgSetStakingRewardCommissionResponse, error)
	SetProtocolFeeReceiver(context.Context, *MsgSetProtocolFeeReceiver) (*MsgSetProtocolFeeReceiverResponse, error)
	SetUnbondRelayFee(context.Context, *MsgSetUnbondRelayFee) (*MsgSetUnbondRelayFeeResponse, error)
	LiquidityUnbond(context.Context, *MsgLiquidityUnbond) (*MsgLiquidityUnbondResponse, error)
	SetUnbondCommission(context.Context, *MsgSetUnbondCommission) (*MsgSetUnbondCommissionResponse, error)
	SubmitSignature(context.Context, *MsgSubmitSignature) (*MsgSubmitSignatureResponse, error)
	SetRParams(context.Context, *MsgSetRParams) (*MsgSetRParamsResponse, error)
	SetRelayFeeReceiver(context.Context, *MsgSetRelayFeeReceiver) (*MsgSetRelayFeeReceiverResponse, error)
	SetRelayGasPrice(context.Context, *MsgSetRelayGasPrice) (*MsgSetRelayGasPriceResponse, error)
	SetEraSeconds(context.Context, *MsgSetEraSeconds) (*MsgSetEraSecondsResponse, error)
	RmBondedPool(context.Context, *MsgRmBondedPool) (*MsgRmBondedPoolResponse, error)
	MigrateInit(context.Context, *MsgMigrateInit) (*MsgMigrateInitResponse, error)
	MigrateUnbondings(context.Context, *MsgMigrateUnbondings) (*MsgMigrateUnbondingsResponse, error)
	ToggleUnbondSwitch(context.Context, *MsgToggleUnbondSwitch) (*MsgToggleUnbondSwitchResponse, error)
	UnsealMigrateInit(context.Context, *MsgUnsealMigrateInit) (*MsgUnsealMigrateInitResponse, error)
	RegisterIcaPool(context.Context, *MsgRegisterIcaPool) (*MsgRegisterIcaPoolResponse, error)
	SetWithdrawalAddr(context.Context, *MsgSetWithdrawalAddr) (*MsgSetWithdrawalAddrResponse, error)
	InitPool(context.Context, *MsgInitPool) (*MsgInitPoolResponse, error)
	SetPoolStatus(context.Context, *MsgSetPoolStatus) (*MsgSetPoolStatusResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) SetEraUnbondLimit(ctx context.Context, req *MsgSetEraUnbondLimit) (*MsgSetEraUnbondLimitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetEraUnbondLimit not implemented")
}
func (*UnimplementedMsgServer) SetPoolDetail(ctx context.Context, req *MsgSetPoolDetail) (*MsgSetPoolDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPoolDetail not implemented")
}
func (*UnimplementedMsgServer) SetLeastBond(ctx context.Context, req *MsgSetLeastBond) (*MsgSetLeastBondResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetLeastBond not implemented")
}
func (*UnimplementedMsgServer) ClearCurrentEraSnapShots(ctx context.Context, req *MsgClearCurrentEraSnapShots) (*MsgClearCurrentEraSnapShotsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearCurrentEraSnapShots not implemented")
}
func (*UnimplementedMsgServer) SetStakingRewardCommission(ctx context.Context, req *MsgSetStakingRewardCommission) (*MsgSetStakingRewardCommissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetStakingRewardCommission not implemented")
}
func (*UnimplementedMsgServer) SetProtocolFeeReceiver(ctx context.Context, req *MsgSetProtocolFeeReceiver) (*MsgSetProtocolFeeReceiverResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetProtocolFeeReceiver not implemented")
}
func (*UnimplementedMsgServer) SetUnbondRelayFee(ctx context.Context, req *MsgSetUnbondRelayFee) (*MsgSetUnbondRelayFeeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUnbondRelayFee not implemented")
}
func (*UnimplementedMsgServer) LiquidityUnbond(ctx context.Context, req *MsgLiquidityUnbond) (*MsgLiquidityUnbondResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LiquidityUnbond not implemented")
}
func (*UnimplementedMsgServer) SetUnbondCommission(ctx context.Context, req *MsgSetUnbondCommission) (*MsgSetUnbondCommissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUnbondCommission not implemented")
}
func (*UnimplementedMsgServer) SubmitSignature(ctx context.Context, req *MsgSubmitSignature) (*MsgSubmitSignatureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitSignature not implemented")
}
func (*UnimplementedMsgServer) SetRParams(ctx context.Context, req *MsgSetRParams) (*MsgSetRParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetRParams not implemented")
}
func (*UnimplementedMsgServer) SetRelayFeeReceiver(ctx context.Context, req *MsgSetRelayFeeReceiver) (*MsgSetRelayFeeReceiverResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetRelayFeeReceiver not implemented")
}
func (*UnimplementedMsgServer) SetRelayGasPrice(ctx context.Context, req *MsgSetRelayGasPrice) (*MsgSetRelayGasPriceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetRelayGasPrice not implemented")
}
func (*UnimplementedMsgServer) SetEraSeconds(ctx context.Context, req *MsgSetEraSeconds) (*MsgSetEraSecondsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetEraSeconds not implemented")
}
func (*UnimplementedMsgServer) RmBondedPool(ctx context.Context, req *MsgRmBondedPool) (*MsgRmBondedPoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RmBondedPool not implemented")
}
func (*UnimplementedMsgServer) MigrateInit(ctx context.Context, req *MsgMigrateInit) (*MsgMigrateInitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MigrateInit not implemented")
}
func (*UnimplementedMsgServer) MigrateUnbondings(ctx context.Context, req *MsgMigrateUnbondings) (*MsgMigrateUnbondingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MigrateUnbondings not implemented")
}
func (*UnimplementedMsgServer) ToggleUnbondSwitch(ctx context.Context, req *MsgToggleUnbondSwitch) (*MsgToggleUnbondSwitchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToggleUnbondSwitch not implemented")
}
func (*UnimplementedMsgServer) UnsealMigrateInit(ctx context.Context, req *MsgUnsealMigrateInit) (*MsgUnsealMigrateInitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnsealMigrateInit not implemented")
}
func (*UnimplementedMsgServer) RegisterIcaPool(ctx context.Context, req *MsgRegisterIcaPool) (*MsgRegisterIcaPoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterIcaPool not implemented")
}
func (*UnimplementedMsgServer) SetWithdrawalAddr(ctx context.Context, req *MsgSetWithdrawalAddr) (*MsgSetWithdrawalAddrResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetWithdrawalAddr not implemented")
}
func (*UnimplementedMsgServer) InitPool(ctx context.Context, req *MsgInitPool) (*MsgInitPoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitPool not implemented")
}
func (*UnimplementedMsgServer) SetPoolStatus(ctx context.Context, req *MsgSetPoolStatus) (*MsgSetPoolStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPoolStatus not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_SetEraUnbondLimit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetEraUnbondLimit)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetEraUnbondLimit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.ledger.Msg/SetEraUnbondLimit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetEraUnbondLimit(ctx, req.(*MsgSetEraUnbondLimit))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetPoolDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetPoolDetail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetPoolDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.ledger.Msg/SetPoolDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetPoolDetail(ctx, req.(*MsgSetPoolDetail))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetLeastBond_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetLeastBond)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetLeastBond(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.ledger.Msg/SetLeastBond",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetLeastBond(ctx, req.(*MsgSetLeastBond))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ClearCurrentEraSnapShots_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgClearCurrentEraSnapShots)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ClearCurrentEraSnapShots(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.ledger.Msg/ClearCurrentEraSnapShots",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ClearCurrentEraSnapShots(ctx, req.(*MsgClearCurrentEraSnapShots))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetStakingRewardCommission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetStakingRewardCommission)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetStakingRewardCommission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.ledger.Msg/SetStakingRewardCommission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetStakingRewardCommission(ctx, req.(*MsgSetStakingRewardCommission))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetProtocolFeeReceiver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetProtocolFeeReceiver)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetProtocolFeeReceiver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.ledger.Msg/SetProtocolFeeReceiver",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetProtocolFeeReceiver(ctx, req.(*MsgSetProtocolFeeReceiver))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetUnbondRelayFee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetUnbondRelayFee)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetUnbondRelayFee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.ledger.Msg/SetUnbondRelayFee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetUnbondRelayFee(ctx, req.(*MsgSetUnbondRelayFee))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_LiquidityUnbond_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgLiquidityUnbond)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).LiquidityUnbond(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.ledger.Msg/LiquidityUnbond",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).LiquidityUnbond(ctx, req.(*MsgLiquidityUnbond))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetUnbondCommission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetUnbondCommission)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetUnbondCommission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.ledger.Msg/SetUnbondCommission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetUnbondCommission(ctx, req.(*MsgSetUnbondCommission))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SubmitSignature_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubmitSignature)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubmitSignature(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.ledger.Msg/SubmitSignature",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubmitSignature(ctx, req.(*MsgSubmitSignature))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetRParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetRParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetRParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.ledger.Msg/SetRParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetRParams(ctx, req.(*MsgSetRParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetRelayFeeReceiver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetRelayFeeReceiver)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetRelayFeeReceiver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.ledger.Msg/SetRelayFeeReceiver",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetRelayFeeReceiver(ctx, req.(*MsgSetRelayFeeReceiver))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetRelayGasPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetRelayGasPrice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetRelayGasPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.ledger.Msg/SetRelayGasPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetRelayGasPrice(ctx, req.(*MsgSetRelayGasPrice))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetEraSeconds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetEraSeconds)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetEraSeconds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.ledger.Msg/SetEraSeconds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetEraSeconds(ctx, req.(*MsgSetEraSeconds))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RmBondedPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRmBondedPool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RmBondedPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.ledger.Msg/RmBondedPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RmBondedPool(ctx, req.(*MsgRmBondedPool))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MigrateInit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMigrateInit)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MigrateInit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.ledger.Msg/MigrateInit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MigrateInit(ctx, req.(*MsgMigrateInit))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MigrateUnbondings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMigrateUnbondings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MigrateUnbondings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.ledger.Msg/MigrateUnbondings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MigrateUnbondings(ctx, req.(*MsgMigrateUnbondings))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ToggleUnbondSwitch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgToggleUnbondSwitch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ToggleUnbondSwitch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.ledger.Msg/ToggleUnbondSwitch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ToggleUnbondSwitch(ctx, req.(*MsgToggleUnbondSwitch))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UnsealMigrateInit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUnsealMigrateInit)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UnsealMigrateInit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.ledger.Msg/UnsealMigrateInit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UnsealMigrateInit(ctx, req.(*MsgUnsealMigrateInit))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RegisterIcaPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRegisterIcaPool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RegisterIcaPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.ledger.Msg/RegisterIcaPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RegisterIcaPool(ctx, req.(*MsgRegisterIcaPool))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetWithdrawalAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetWithdrawalAddr)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetWithdrawalAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.ledger.Msg/SetWithdrawalAddr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetWithdrawalAddr(ctx, req.(*MsgSetWithdrawalAddr))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_InitPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgInitPool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).InitPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.ledger.Msg/InitPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).InitPool(ctx, req.(*MsgInitPool))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetPoolStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetPoolStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetPoolStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.ledger.Msg/SetPoolStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetPoolStatus(ctx, req.(*MsgSetPoolStatus))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stafihub.stafihub.ledger.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetEraUnbondLimit",
			Handler:    _Msg_SetEraUnbondLimit_Handler,
		},
		{
			MethodName: "SetPoolDetail",
			Handler:    _Msg_SetPoolDetail_Handler,
		},
		{
			MethodName: "SetLeastBond",
			Handler:    _Msg_SetLeastBond_Handler,
		},
		{
			MethodName: "ClearCurrentEraSnapShots",
			Handler:    _Msg_ClearCurrentEraSnapShots_Handler,
		},
		{
			MethodName: "SetStakingRewardCommission",
			Handler:    _Msg_SetStakingRewardCommission_Handler,
		},
		{
			MethodName: "SetProtocolFeeReceiver",
			Handler:    _Msg_SetProtocolFeeReceiver_Handler,
		},
		{
			MethodName: "SetUnbondRelayFee",
			Handler:    _Msg_SetUnbondRelayFee_Handler,
		},
		{
			MethodName: "LiquidityUnbond",
			Handler:    _Msg_LiquidityUnbond_Handler,
		},
		{
			MethodName: "SetUnbondCommission",
			Handler:    _Msg_SetUnbondCommission_Handler,
		},
		{
			MethodName: "SubmitSignature",
			Handler:    _Msg_SubmitSignature_Handler,
		},
		{
			MethodName: "SetRParams",
			Handler:    _Msg_SetRParams_Handler,
		},
		{
			MethodName: "SetRelayFeeReceiver",
			Handler:    _Msg_SetRelayFeeReceiver_Handler,
		},
		{
			MethodName: "SetRelayGasPrice",
			Handler:    _Msg_SetRelayGasPrice_Handler,
		},
		{
			MethodName: "SetEraSeconds",
			Handler:    _Msg_SetEraSeconds_Handler,
		},
		{
			MethodName: "RmBondedPool",
			Handler:    _Msg_RmBondedPool_Handler,
		},
		{
			MethodName: "MigrateInit",
			Handler:    _Msg_MigrateInit_Handler,
		},
		{
			MethodName: "MigrateUnbondings",
			Handler:    _Msg_MigrateUnbondings_Handler,
		},
		{
			MethodName: "ToggleUnbondSwitch",
			Handler:    _Msg_ToggleUnbondSwitch_Handler,
		},
		{
			MethodName: "UnsealMigrateInit",
			Handler:    _Msg_UnsealMigrateInit_Handler,
		},
		{
			MethodName: "RegisterIcaPool",
			Handler:    _Msg_RegisterIcaPool_Handler,
		},
		{
			MethodName: "SetWithdrawalAddr",
			Handler:    _Msg_SetWithdrawalAddr_Handler,
		},
		{
			MethodName: "InitPool",
			Handler:    _Msg_InitPool_Handler,
		},
		{
			MethodName: "SetPoolStatus",
			Handler:    _Msg_SetPoolStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stafihub/stafihub/ledger/tx.proto",
}

func (m *MsgSetEraUnbondLimit) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetEraUnbondLimit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetEraUnbondLimit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Limit != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetEraUnbondLimitResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetEraUnbondLimitResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetEraUnbondLimitResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetPoolDetail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetPoolDetail) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetPoolDetail) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Threshold != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Threshold))
		i--
		dAtA[i] = 0x28
	}
	if len(m.SubAccounts) > 0 {
		for iNdEx := len(m.SubAccounts) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.SubAccounts[iNdEx])
			copy(dAtA[i:], m.SubAccounts[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.SubAccounts[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.Pool) > 0 {
		i -= len(m.Pool)
		copy(dAtA[i:], m.Pool)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Pool)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetPoolDetailResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetPoolDetailResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetPoolDetailResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetLeastBond) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetLeastBond) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetLeastBond) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LeastBond) > 0 {
		i -= len(m.LeastBond)
		copy(dAtA[i:], m.LeastBond)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LeastBond)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetLeastBondResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetLeastBondResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetLeastBondResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgClearCurrentEraSnapShots) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgClearCurrentEraSnapShots) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgClearCurrentEraSnapShots) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgClearCurrentEraSnapShotsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgClearCurrentEraSnapShotsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgClearCurrentEraSnapShotsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetStakingRewardCommission) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetStakingRewardCommission) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetStakingRewardCommission) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.Commission.Size()
		i -= size
		if _, err := m.Commission.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetStakingRewardCommissionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetStakingRewardCommissionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetStakingRewardCommissionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetProtocolFeeReceiver) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetProtocolFeeReceiver) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetProtocolFeeReceiver) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Receiver) > 0 {
		i -= len(m.Receiver)
		copy(dAtA[i:], m.Receiver)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Receiver)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetProtocolFeeReceiverResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetProtocolFeeReceiverResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetProtocolFeeReceiverResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetUnbondRelayFee) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetUnbondRelayFee) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetUnbondRelayFee) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.Value.Size()
		i -= size
		if _, err := m.Value.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetUnbondRelayFeeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetUnbondRelayFeeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetUnbondRelayFeeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgLiquidityUnbond) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgLiquidityUnbond) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgLiquidityUnbond) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Recipient) > 0 {
		i -= len(m.Recipient)
		copy(dAtA[i:], m.Recipient)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Recipient)))
		i--
		dAtA[i] = 0x22
	}
	{
		size := m.Value.Size()
		i -= size
		if _, err := m.Value.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.Pool) > 0 {
		i -= len(m.Pool)
		copy(dAtA[i:], m.Pool)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Pool)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgLiquidityUnbondResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgLiquidityUnbondResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgLiquidityUnbondResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetUnbondCommission) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetUnbondCommission) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetUnbondCommission) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.Commission.Size()
		i -= size
		if _, err := m.Commission.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetUnbondCommissionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetUnbondCommissionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetUnbondCommissionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSubmitSignature) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubmitSignature) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubmitSignature) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signature) > 0 {
		i -= len(m.Signature)
		copy(dAtA[i:], m.Signature)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signature)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.PropId) > 0 {
		i -= len(m.PropId)
		copy(dAtA[i:], m.PropId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PropId)))
		i--
		dAtA[i] = 0x32
	}
	if m.TxType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.TxType))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Pool) > 0 {
		i -= len(m.Pool)
		copy(dAtA[i:], m.Pool)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Pool)))
		i--
		dAtA[i] = 0x22
	}
	if m.Era != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Era))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubmitSignatureResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubmitSignatureResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubmitSignatureResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetRParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetRParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetRParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LeastBond) > 0 {
		i -= len(m.LeastBond)
		copy(dAtA[i:], m.LeastBond)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LeastBond)))
		i--
		dAtA[i] = 0x3a
	}
	if m.BondingDuration != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.BondingDuration))
		i--
		dAtA[i] = 0x30
	}
	if m.Offset != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x28
	}
	if m.EraSeconds != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EraSeconds))
		i--
		dAtA[i] = 0x20
	}
	if len(m.GasPrice) > 0 {
		i -= len(m.GasPrice)
		copy(dAtA[i:], m.GasPrice)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GasPrice)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetRParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetRParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetRParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetRelayFeeReceiver) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetRelayFeeReceiver) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetRelayFeeReceiver) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Receiver) > 0 {
		i -= len(m.Receiver)
		copy(dAtA[i:], m.Receiver)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Receiver)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetRelayFeeReceiverResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetRelayFeeReceiverResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetRelayFeeReceiverResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetRelayGasPrice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetRelayGasPrice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetRelayGasPrice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.GasPrice) > 0 {
		i -= len(m.GasPrice)
		copy(dAtA[i:], m.GasPrice)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GasPrice)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetRelayGasPriceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetRelayGasPriceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetRelayGasPriceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetEraSeconds) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetEraSeconds) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetEraSeconds) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Offset != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x28
	}
	if m.BondingDuration != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.BondingDuration))
		i--
		dAtA[i] = 0x20
	}
	if m.EraSeconds != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EraSeconds))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetEraSecondsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetEraSecondsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetEraSecondsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRmBondedPool) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRmBondedPool) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRmBondedPool) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRmBondedPoolResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRmBondedPoolResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRmBondedPoolResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMigrateInit) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMigrateInit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMigrateInit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.TotalProtocolFee.Size()
		i -= size
		if _, err := m.TotalProtocolFee.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x4a
	{
		size := m.ExchangeRate.Size()
		i -= size
		if _, err := m.ExchangeRate.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x42
	{
		size := m.Unbond.Size()
		i -= size
		if _, err := m.Unbond.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x3a
	{
		size := m.Bond.Size()
		i -= size
		if _, err := m.Bond.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x32
	{
		size := m.Active.Size()
		i -= size
		if _, err := m.Active.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	{
		size := m.TotalSupply.Size()
		i -= size
		if _, err := m.TotalSupply.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.Pool) > 0 {
		i -= len(m.Pool)
		copy(dAtA[i:], m.Pool)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Pool)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMigrateInitResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMigrateInitResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMigrateInitResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMigrateUnbondings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMigrateUnbondings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMigrateUnbondings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Unbondings) > 0 {
		for iNdEx := len(m.Unbondings) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Unbondings[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.Era != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Era))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Pool) > 0 {
		i -= len(m.Pool)
		copy(dAtA[i:], m.Pool)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Pool)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMigrateUnbondingsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMigrateUnbondingsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMigrateUnbondingsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgToggleUnbondSwitch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgToggleUnbondSwitch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgToggleUnbondSwitch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgToggleUnbondSwitchResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgToggleUnbondSwitchResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgToggleUnbondSwitchResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUnsealMigrateInit) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnsealMigrateInit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnsealMigrateInit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUnsealMigrateInitResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnsealMigrateInitResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnsealMigrateInitResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRegisterIcaPool) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterIcaPool) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterIcaPool) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ConnectionId) > 0 {
		i -= len(m.ConnectionId)
		copy(dAtA[i:], m.ConnectionId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ConnectionId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRegisterIcaPoolResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterIcaPoolResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterIcaPoolResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetWithdrawalAddr) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetWithdrawalAddr) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetWithdrawalAddr) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.DelegationAddr) > 0 {
		i -= len(m.DelegationAddr)
		copy(dAtA[i:], m.DelegationAddr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DelegationAddr)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetWithdrawalAddrResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetWithdrawalAddrResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetWithdrawalAddrResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgInitPool) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInitPool) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInitPool) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Pool) > 0 {
		i -= len(m.Pool)
		copy(dAtA[i:], m.Pool)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Pool)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgInitPoolResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInitPoolResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInitPoolResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetPoolStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetPoolStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetPoolStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Status != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Pool) > 0 {
		i -= len(m.Pool)
		copy(dAtA[i:], m.Pool)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Pool)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetPoolStatusResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetPoolStatusResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetPoolStatusResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgSetEraUnbondLimit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovTx(uint64(m.Limit))
	}
	return n
}

func (m *MsgSetEraUnbondLimitResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetPoolDetail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Pool)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.SubAccounts) > 0 {
		for _, s := range m.SubAccounts {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if m.Threshold != 0 {
		n += 1 + sovTx(uint64(m.Threshold))
	}
	return n
}

func (m *MsgSetPoolDetailResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetLeastBond) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LeastBond)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetLeastBondResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgClearCurrentEraSnapShots) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgClearCurrentEraSnapShotsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetStakingRewardCommission) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Commission.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgSetStakingRewardCommissionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetProtocolFeeReceiver) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Receiver)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetProtocolFeeReceiverResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetUnbondRelayFee) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Value.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgSetUnbondRelayFeeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgLiquidityUnbond) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Pool)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Value.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.Recipient)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgLiquidityUnbondResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetUnbondCommission) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Commission.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgSetUnbondCommissionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSubmitSignature) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Era != 0 {
		n += 1 + sovTx(uint64(m.Era))
	}
	l = len(m.Pool)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.TxType != 0 {
		n += 1 + sovTx(uint64(m.TxType))
	}
	l = len(m.PropId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Signature)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSubmitSignatureResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetRParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.GasPrice)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EraSeconds != 0 {
		n += 1 + sovTx(uint64(m.EraSeconds))
	}
	if m.Offset != 0 {
		n += 1 + sovTx(uint64(m.Offset))
	}
	if m.BondingDuration != 0 {
		n += 1 + sovTx(uint64(m.BondingDuration))
	}
	l = len(m.LeastBond)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetRParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetRelayFeeReceiver) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Receiver)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetRelayFeeReceiverResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetRelayGasPrice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.GasPrice)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetRelayGasPriceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetEraSeconds) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EraSeconds != 0 {
		n += 1 + sovTx(uint64(m.EraSeconds))
	}
	if m.BondingDuration != 0 {
		n += 1 + sovTx(uint64(m.BondingDuration))
	}
	if m.Offset != 0 {
		n += 1 + sovTx(uint64(m.Offset))
	}
	return n
}

func (m *MsgSetEraSecondsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRmBondedPool) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRmBondedPoolResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMigrateInit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Pool)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.TotalSupply.Size()
	n += 1 + l + sovTx(uint64(l))
	l = m.Active.Size()
	n += 1 + l + sovTx(uint64(l))
	l = m.Bond.Size()
	n += 1 + l + sovTx(uint64(l))
	l = m.Unbond.Size()
	n += 1 + l + sovTx(uint64(l))
	l = m.ExchangeRate.Size()
	n += 1 + l + sovTx(uint64(l))
	l = m.TotalProtocolFee.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgMigrateInitResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMigrateUnbondings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Pool)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Era != 0 {
		n += 1 + sovTx(uint64(m.Era))
	}
	if len(m.Unbondings) > 0 {
		for _, e := range m.Unbondings {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgMigrateUnbondingsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgToggleUnbondSwitch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgToggleUnbondSwitchResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUnsealMigrateInit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUnsealMigrateInitResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRegisterIcaPool) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ConnectionId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRegisterIcaPoolResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetWithdrawalAddr) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DelegationAddr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetWithdrawalAddrResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgInitPool) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Pool)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgInitPoolResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetPoolStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Pool)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovTx(uint64(m.Status))
	}
	return n
}

func (m *MsgSetPoolStatusResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgSetEraUnbondLimit) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetEraUnbondLimit: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetEraUnbondLimit: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetEraUnbondLimitResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetEraUnbondLimitResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetEraUnbondLimitResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetPoolDetail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetPoolDetail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetPoolDetail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pool", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pool = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubAccounts", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubAccounts = append(m.SubAccounts, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Threshold", wireType)
			}
			m.Threshold = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Threshold |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetPoolDetailResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetPoolDetailResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetPoolDetailResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetLeastBond) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetLeastBond: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetLeastBond: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LeastBond", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LeastBond = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetLeastBondResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetLeastBondResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetLeastBondResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgClearCurrentEraSnapShots) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgClearCurrentEraSnapShots: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgClearCurrentEraSnapShots: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgClearCurrentEraSnapShotsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgClearCurrentEraSnapShotsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgClearCurrentEraSnapShotsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetStakingRewardCommission) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetStakingRewardCommission: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetStakingRewardCommission: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Commission", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Commission.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetStakingRewardCommissionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetStakingRewardCommissionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetStakingRewardCommissionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetProtocolFeeReceiver) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetProtocolFeeReceiver: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetProtocolFeeReceiver: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Receiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetProtocolFeeReceiverResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetProtocolFeeReceiverResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetProtocolFeeReceiverResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetUnbondRelayFee) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetUnbondRelayFee: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetUnbondRelayFee: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Value.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetUnbondRelayFeeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetUnbondRelayFeeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetUnbondRelayFeeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgLiquidityUnbond) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgLiquidityUnbond: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgLiquidityUnbond: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pool", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pool = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Value.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Recipient", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Recipient = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgLiquidityUnbondResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgLiquidityUnbondResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgLiquidityUnbondResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetUnbondCommission) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetUnbondCommission: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetUnbondCommission: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Commission", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Commission.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetUnbondCommissionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetUnbondCommissionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetUnbondCommissionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubmitSignature) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubmitSignature: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubmitSignature: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Era", wireType)
			}
			m.Era = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Era |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pool", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pool = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxType", wireType)
			}
			m.TxType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TxType |= OriginalTxType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PropId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PropId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signature", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signature = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubmitSignatureResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubmitSignatureResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubmitSignatureResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetRParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetRParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetRParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GasPrice", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GasPrice = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EraSeconds", wireType)
			}
			m.EraSeconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EraSeconds |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BondingDuration", wireType)
			}
			m.BondingDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BondingDuration |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LeastBond", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LeastBond = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetRParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetRParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetRParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetRelayFeeReceiver) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetRelayFeeReceiver: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetRelayFeeReceiver: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Receiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetRelayFeeReceiverResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetRelayFeeReceiverResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetRelayFeeReceiverResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetRelayGasPrice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetRelayGasPrice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetRelayGasPrice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GasPrice", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GasPrice = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetRelayGasPriceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetRelayGasPriceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetRelayGasPriceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetEraSeconds) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetEraSeconds: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetEraSeconds: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EraSeconds", wireType)
			}
			m.EraSeconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EraSeconds |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BondingDuration", wireType)
			}
			m.BondingDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BondingDuration |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetEraSecondsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetEraSecondsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetEraSecondsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRmBondedPool) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRmBondedPool: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRmBondedPool: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRmBondedPoolResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRmBondedPoolResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRmBondedPoolResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMigrateInit) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMigrateInit: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMigrateInit: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pool", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pool = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalSupply", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.TotalSupply.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Active", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Active.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bond", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Bond.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unbond", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Unbond.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExchangeRate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ExchangeRate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalProtocolFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.TotalProtocolFee.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMigrateInitResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMigrateInitResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMigrateInitResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMigrateUnbondings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMigrateUnbondings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMigrateUnbondings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pool", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pool = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Era", wireType)
			}
			m.Era = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Era |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unbondings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Unbondings = append(m.Unbondings, &Unbonding{})
			if err := m.Unbondings[len(m.Unbondings)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMigrateUnbondingsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMigrateUnbondingsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMigrateUnbondingsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgToggleUnbondSwitch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgToggleUnbondSwitch: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgToggleUnbondSwitch: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgToggleUnbondSwitchResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgToggleUnbondSwitchResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgToggleUnbondSwitchResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnsealMigrateInit) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnsealMigrateInit: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnsealMigrateInit: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnsealMigrateInitResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnsealMigrateInitResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnsealMigrateInitResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterIcaPool) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterIcaPool: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterIcaPool: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConnectionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConnectionId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterIcaPoolResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterIcaPoolResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterIcaPoolResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetWithdrawalAddr) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetWithdrawalAddr: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetWithdrawalAddr: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegationAddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DelegationAddr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetWithdrawalAddrResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetWithdrawalAddrResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetWithdrawalAddrResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInitPool) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInitPool: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInitPool: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pool", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pool = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInitPoolResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInitPoolResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInitPoolResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetPoolStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetPoolStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetPoolStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pool", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pool = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= PoolStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetPoolStatusResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetPoolStatusResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetPoolStatusResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
