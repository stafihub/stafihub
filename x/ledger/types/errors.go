package types

// DONTCOVER

import (
	sdkerrors "github.com/cosmos/cosmos-sdk/types/errors"
)

// x/ledger module sentinel errors
var (
	ErrPoolAlreadyAdded             = sdkerrors.Register(ModuleName, 1, "pool already added error")
	ErrPoolNotFound                 = sdkerrors.Register(ModuleName, 2, "pool not found error")
	ErrPoolNotBonded                = sdkerrors.Register(ModuleName, 3, "pool not bonded error")
	ErrRepeatInitBond               = sdkerrors.Register(ModuleName, 4, "repeat init bond error")
	ErrActiveAlreadySet             = sdkerrors.Register(ModuleName, 5, "active already set error")
	ErrBondPipelineNotFound         = sdkerrors.Register(ModuleName, 6, "bond pipeline not found error")
	ErrEraNotContinuable            = sdkerrors.Register(ModuleName, 7, "era not continuable error")
	ErrEraSkipped                   = sdkerrors.Register(ModuleName, 9, "era skipped error")
	ErrNoProtocolFeeReceiver        = sdkerrors.Register(ModuleName, 10, "no protocol receiver error")
	ErrSnapshotNotFound             = sdkerrors.Register(ModuleName, 11, "snapshot not found error")
	ErrStateNotBondReported         = sdkerrors.Register(ModuleName, 12, "state not bond reported error")
	ErrStateNotEraUpdated           = sdkerrors.Register(ModuleName, 13, "state not era updated error")
	ErrRateIsNone                   = sdkerrors.Register(ModuleName, 14, "rate is none error")
	ErrStateNotActiveReported       = sdkerrors.Register(ModuleName, 15, "state not active reported error")
	ErrStateNotTransferable         = sdkerrors.Register(ModuleName, 16, "state not transferable error")
	ErrTransferReported             = sdkerrors.Register(ModuleName, 17, "transfer reported error")
	ErrChainEraNotFound             = sdkerrors.Register(ModuleName, 18, "chain era not found error")
	ErrBondingDurationNotSet        = sdkerrors.Register(ModuleName, 19, "bonding duration not set error")
	ErrPoolLimitReached             = sdkerrors.Register(ModuleName, 20, "pool limit reached error")
	ErrBondRepeated                 = sdkerrors.Register(ModuleName, 21, "bond repeated error")
	ErrInvalidBonder                = sdkerrors.Register(ModuleName, 22, "invalid bonder error")
	ErrCommissionTooBig             = sdkerrors.Register(ModuleName, 23, "commission too big error")
	ErrInvalidEra                   = sdkerrors.Register(ModuleName, 24, "invalid era error")
	ErrSignatureRepeated            = sdkerrors.Register(ModuleName, 25, "signature repeated error")
	ErrPoolDetailNotFound           = sdkerrors.Register(ModuleName, 26, "pool detail not found error")
	ErrLockedDenomNotMatch          = sdkerrors.Register(ModuleName, 28, "locked not matched error")
	ErrLockedNotEnough              = sdkerrors.Register(ModuleName, 29, "locked not enough error")
	ErrRValidatorAlreadyExist       = sdkerrors.Register(ModuleName, 30, "rvalidator already exist error")
	ErrNoRelayFeeReceiver           = sdkerrors.Register(ModuleName, 31, "no relay receiver error")
	ErrNoStakingRewardCommisson     = sdkerrors.Register(ModuleName, 32, "no staking reward commission error")
	ErrNoUnbondCommisson            = sdkerrors.Register(ModuleName, 33, "no unbond commission error")
	ErrBondPipelineAlreadyWork      = sdkerrors.Register(ModuleName, 34, "bond pipeline already work error")
	ErrExchangeRateAlreadyExist     = sdkerrors.Register(ModuleName, 35, "exchange rate already exist error")
	ErrUnbondingDenomNotMatch       = sdkerrors.Register(ModuleName, 36, "unbondings denom not match error")
	ErrAccountUnbondReachLimit      = sdkerrors.Register(ModuleName, 37, "account unbond reach limit error")
	ErrLiquidityBondAlreadyExecuted = sdkerrors.Register(ModuleName, 38, "liquidity bond already executed")
	ErrLiquidityUnbondSwitchOff     = sdkerrors.Register(ModuleName, 39, "liquidity unbond switch off error")
	ErrMigrateInitIsSealed          = sdkerrors.Register(ModuleName, 40, "migrate init is sealed")
	ErrIcaPoolNotFound              = sdkerrors.Register(ModuleName, 41, "ica pool not found")
	ErrIcaPoolStatusUnmatch         = sdkerrors.Register(ModuleName, 42, "ica pool status unmatch")
	ErrInterchainTxPropIdNotFound   = sdkerrors.Register(ModuleName, 43, "interchain tx prop id not found")
	ErrInterchainTxMsgsEmpty        = sdkerrors.Register(ModuleName, 44, "interchain tx msgs empty")
	ErrPoolStatusUnmatch            = sdkerrors.Register(ModuleName, 45, "pool status unmatch")
	ErrConnectionIdNotFound         = sdkerrors.Register(ModuleName, 46, "connection id not found")
	ErrLsmInterchainTxFailed        = sdkerrors.Register(ModuleName, 47, "lsm interchain tx failed")
	ErrEraIsDealing                 = sdkerrors.Register(ModuleName, 48, "era is dealing")
)
