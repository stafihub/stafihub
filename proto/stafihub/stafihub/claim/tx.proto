syntax = "proto3";
package stafihub.stafihub.claim;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/stafihub/stafihub/x/claim/types";

// Msg defines the Msg service.
service Msg {
  rpc SetMerkleRoot(MsgSetMerkleRoot) returns (MsgSetMerkleRootResponse);
  rpc Claim(MsgClaim) returns (MsgClaimResponse);
  rpc ToggleClaimSwitch(MsgToggleClaimSwitch) returns (MsgToggleClaimSwitchResponse);
  rpc ProvideToken(MsgProvideToken) returns (MsgProvideTokenResponse);
  rpc WithdrawToken(MsgWithdrawToken) returns (MsgWithdrawTokenResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgSetMerkleRoot {
  string creator = 1;
  uint64 round = 2 [(gogoproto.jsontag) = "round"];
  string merkleRoot = 3;
}

message MsgSetMerkleRootResponse {
}

message MsgClaim {
  string creator = 1;
  uint64 round = 2 [(gogoproto.jsontag) = "round"];
  uint64 index = 3 [(gogoproto.jsontag) = "index"];
  string account = 4;
  cosmos.base.v1beta1.Coin coin = 5 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin", (gogoproto.nullable) = false];
  repeated string proof = 6;
}

message MsgClaimResponse {
}

message MsgToggleClaimSwitch {
  string creator = 1;
  uint64 round = 2 [(gogoproto.jsontag) = "round"];
}

message MsgToggleClaimSwitchResponse {
}

message MsgProvideToken {
  string creator = 1;
  cosmos.base.v1beta1.Coin token = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin", (gogoproto.nullable) = false];
}

message MsgProvideTokenResponse {
}

message MsgWithdrawToken {
  string creator = 1;
  string recipient = 2;
  cosmos.base.v1beta1.Coin token = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin", (gogoproto.nullable) = false];
}

message MsgWithdrawTokenResponse {
}

// this line is used by starport scaffolding # proto/tx/message
