syntax = "proto3";
package stafihub.stafihub.rdex;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "stafihub/stafihub/rdex/params.proto";
import "stafihub/stafihub/rdex/models.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/stafihub/stafihub/x/rdex/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/stafihub/stafihub/rdex/params";
  }
  // Queries a list of SwapPoolInfo items.
	rpc SwapPoolInfo(QuerySwapPoolInfoRequest) returns (QuerySwapPoolInfoResponse) {
		option (google.api.http).get = "/stafihub/stafihub/rdex/swap_pool_info/{lpDenom}";
	}

// Queries a list of SwapPoolList items.
	rpc SwapPoolList(QuerySwapPoolListRequest) returns (QuerySwapPoolListResponse) {
		option (google.api.http).get = "/stafihub/stafihub/rdex/swap_pool_list";
	}

// Queries a list of ProviderList items.
	rpc ProviderList(QueryProviderListRequest) returns (QueryProviderListResponse) {
		option (google.api.http).get = "/stafihub/stafihub/rdex/provider_list";
	}

// Queries a list of PoolCreatorList items.
	rpc PoolCreatorList(QueryPoolCreatorListRequest) returns (QueryPoolCreatorListResponse) {
		option (google.api.http).get = "/stafihub/stafihub/rdex/pool_creator_list";
	}

// Queries a list of ProviderSwitch items.
	rpc ProviderSwitch(QueryProviderSwitchRequest) returns (QueryProviderSwitchResponse) {
		option (google.api.http).get = "/stafihub/stafihub/rdex/provider_switch";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QuerySwapPoolInfoRequest {
  string lpDenom = 1;
}

message QuerySwapPoolInfoResponse {
  SwapPool swapPool = 1;
}

message QuerySwapPoolListRequest {
}

message QuerySwapPoolListResponse {
  repeated SwapPool swapPoolList = 1;
}

message QueryProviderListRequest {
}

message QueryProviderListResponse {
  repeated string providerList = 1;
}

message QueryPoolCreatorListRequest {
}

message QueryPoolCreatorListResponse {
  repeated string poolCreatorList = 1;
}

message QueryProviderSwitchRequest {
}

message QueryProviderSwitchResponse {
  bool providerSwitch = 1;
}

// this line is used by starport scaffolding # 3
