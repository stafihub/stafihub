syntax = "proto3";
package stafihub.stafihub.rvote;

import "google/api/annotations.proto";
// import "cosmos/base/query/v1beta1/pagination.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/stafihub/stafihub/x/rvote/types";

// Query defines the gRPC querier service.
service Query {
    // Queries a list of getProposal items.
	rpc GetProposal(QueryGetProposalRequest) returns (QueryGetProposalResponse) {
		option (google.api.http).get = "/stafihub/stafihub/rvote/get_proposal/{propId}";
	}

// Queries a list of getProposalLife items.
	rpc GetProposalLife(QueryGetProposalLifeRequest) returns (QueryGetProposalLifeResponse) {
		option (google.api.http).get = "/stafihub/stafihub/rvote/get_proposal_life";
	}

// this line is used by starport scaffolding # 2
}

message QueryGetProposalRequest {
  string propId = 1;
}

message QueryGetProposalResponse {
  string proposal = 1;
}

message QueryGetProposalLifeRequest {
}

message QueryGetProposalLifeResponse {
  int64 proposalLife = 1;
}
 
// this line is used by starport scaffolding # 3
