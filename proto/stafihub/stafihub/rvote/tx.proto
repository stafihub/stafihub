syntax = "proto3";
package stafihub.stafihub.rvote;

import "stafihub/stafihub/rvote/proposal.proto";
import "google/protobuf/any.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/stafihub/stafihub/x/rvote/types";

// Msg defines the Msg service.
service Msg {
  rpc SetProposalLife(MsgSetProposalLife) returns (MsgSetProposalLifeResponse);
  rpc SubmitProposal(MsgSubmitProposal) returns (MsgSubmitProposalResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgSetProposalLife {
  string creator = 1;
  int64 proposalLife = 2 [(gogoproto.jsontag) = "proposalLife"];
}

message MsgSetProposalLifeResponse {
}

message MsgSubmitProposal {
  option (gogoproto.equal)            = false;
  option (gogoproto.goproto_stringer) = false;
  option (gogoproto.stringer)         = false;
  option (gogoproto.goproto_getters)  = false;

  string proposer = 1;
  google.protobuf.Any content = 2 [(cosmos_proto.accepts_interface) = "Content"];
}

message MsgSubmitProposalResponse {
    string propId = 1;
    ProposalStatus status = 2;
}

// this line is used by starport scaffolding # proto/tx/message