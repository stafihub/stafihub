syntax = "proto3";
package stafihub.stafihub.rmintreward;

import "gogoproto/gogo.proto";
import "stafihub/stafihub/rmintreward/models.proto";
import "cosmos/base/v1beta1/coin.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/stafihub/stafihub/x/rmintreward/types";

// Msg defines the Msg service.
service Msg {
  rpc AddMintRewardAct(MsgAddMintRewardAct) returns (MsgAddMintRewardActResponse);
  rpc UpdateMintRewardAct(MsgUpdateMintRewardAct) returns (MsgUpdateMintRewardActResponse);
  rpc ClaimMintReward(MsgClaimMintReward) returns (MsgClaimMintRewardResponse);
  rpc ProvideRewardToken(MsgProvideRewardToken) returns (MsgProvideRewardTokenResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgAddMintRewardAct {
  string creator = 1;
  string denom = 2;
  MintRewardActPost act = 3;
}

message MsgAddMintRewardActResponse {
}

message MsgUpdateMintRewardAct {
  string creator = 1;
  string denom = 2;
  uint64 cycle = 3 [(gogoproto.jsontag) = "cycle"];
  MintRewardActPost act = 4;
}

message MsgUpdateMintRewardActResponse {
}

message MsgClaimMintReward {
  string creator = 1;
  string denom = 2;
  uint64 cycle = 3 [(gogoproto.jsontag) = "cycle"];
  uint64 mintIndex = 4 [(gogoproto.jsontag) = "mintIndex"];
}

message MsgClaimMintRewardResponse {
}

message MsgProvideRewardToken {
  string creator = 1;
  cosmos.base.v1beta1.Coin amount = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin", (gogoproto.nullable) = false];
}

message MsgProvideRewardTokenResponse {
}

// this line is used by starport scaffolding # proto/tx/message