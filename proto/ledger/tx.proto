syntax = "proto3";
package stafihub.stafihub.ledger;

import "google/protobuf/any.proto";
import "gogoproto/gogo.proto";
import "ledger/ledger.proto";
import "cosmos/base/v1beta1/coin.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/stafihub/stafihub/x/ledger/types";

// Msg defines the Msg service.
service Msg {
  rpc SetEraUnbondLimit(MsgSetEraUnbondLimit) returns (MsgSetEraUnbondLimitResponse);
  rpc SetPoolDetail(MsgSetPoolDetail) returns (MsgSetPoolDetailResponse);
  rpc SetLeastBond(MsgSetLeastBond) returns (MsgSetLeastBondResponse);
  rpc ClearCurrentEraSnapShots(MsgClearCurrentEraSnapShots) returns (MsgClearCurrentEraSnapShotsResponse);
  rpc SetStakingRewardCommission(MsgSetStakingRewardCommission) returns (MsgSetStakingRewardCommissionResponse);
  rpc SetProtocolFeeReceiver(MsgSetProtocolFeeReceiver) returns (MsgSetProtocolFeeReceiverResponse);
  rpc SetUnbondRelayFee(MsgSetUnbondRelayFee) returns (MsgSetUnbondRelayFeeResponse);
  rpc LiquidityUnbond(MsgLiquidityUnbond) returns (MsgLiquidityUnbondResponse);
  rpc SetUnbondCommission(MsgSetUnbondCommission) returns (MsgSetUnbondCommissionResponse);
  rpc SubmitSignature(MsgSubmitSignature) returns (MsgSubmitSignatureResponse);
  rpc SetRParams(MsgSetRParams) returns (MsgSetRParamsResponse);
  rpc SetRelayFeeReceiver(MsgSetRelayFeeReceiver) returns (MsgSetRelayFeeReceiverResponse);
  rpc SetRelayGasPrice(MsgSetRelayGasPrice) returns (MsgSetRelayGasPriceResponse);
  rpc SetEraSeconds(MsgSetEraSeconds) returns (MsgSetEraSecondsResponse);
  rpc RmBondedPool(MsgRmBondedPool) returns (MsgRmBondedPoolResponse);
  rpc MigrateInit(MsgMigrateInit) returns (MsgMigrateInitResponse);
  rpc MigrateUnbondings(MsgMigrateUnbondings) returns (MsgMigrateUnbondingsResponse);
  rpc ToggleUnbondSwitch(MsgToggleUnbondSwitch) returns (MsgToggleUnbondSwitchResponse);
  rpc UnsealMigrateInit(MsgUnsealMigrateInit) returns (MsgUnsealMigrateInitResponse);
  rpc RegisterIcaPool(MsgRegisterIcaPool) returns (MsgRegisterIcaPoolResponse);
  rpc SetWithdrawalAddr(MsgSetWithdrawalAddr) returns (MsgSetWithdrawalAddrResponse);
  rpc InitPool(MsgInitPool) returns (MsgInitPoolResponse);
  rpc SetPoolStatus(MsgSetPoolStatus) returns (MsgSetPoolStatusResponse);
  rpc SetInterchainTxProposalStatus(MsgSetInterchainTxProposalStatus) returns (MsgSetInterchainTxProposalStatusResponse);
  rpc FlushIbcPacket(MsgFlushIbcPacket) returns (MsgFlushIbcPacketResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgSetEraUnbondLimit {
  string creator = 1;
  string denom = 2;
  uint32 limit = 3 [(gogoproto.jsontag) = "limit"];
}

message MsgSetEraUnbondLimitResponse {
}

message MsgSetPoolDetail {
  string creator = 1;
  string denom = 2;
  string pool = 3;
  repeated string subAccounts = 4;
  uint32 threshold = 5 [(gogoproto.jsontag) = "threshold"];
}

message MsgSetPoolDetailResponse {
}

message MsgSetLeastBond {
  string creator = 1;
  string denom = 2;
  string leastBond = 3;
}

message MsgSetLeastBondResponse {
}

message MsgClearCurrentEraSnapShots {
  string creator = 1;
  string denom = 2;
}

message MsgClearCurrentEraSnapShotsResponse {
}

message MsgSetStakingRewardCommission {
  string creator = 1;
  string denom = 2;
  string commission = 3 [(gogoproto.customtype) = "github.com/stafihub/stafihub/utils.Dec", (gogoproto.nullable) = false];
}

message MsgSetStakingRewardCommissionResponse {
}

message MsgSetProtocolFeeReceiver {
  string creator = 1;
  string receiver = 2;
}

message MsgSetProtocolFeeReceiverResponse {
}

message MsgSetUnbondRelayFee {
  string creator = 1;
  string denom = 2;
  cosmos.base.v1beta1.Coin value = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin", (gogoproto.nullable) = false];
}

message MsgSetUnbondRelayFeeResponse {
}

message MsgLiquidityUnbond {
  string creator = 1;
  string pool = 2;
  cosmos.base.v1beta1.Coin value = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin", (gogoproto.nullable) = false];
  string recipient = 4;
}

message MsgLiquidityUnbondResponse {
}

message MsgSetUnbondCommission {
  string creator = 1;
  string denom = 2;
  string commission = 3 [(gogoproto.customtype) = "github.com/stafihub/stafihub/utils.Dec", (gogoproto.nullable) = false];
}

message MsgSetUnbondCommissionResponse {
}

message MsgSubmitSignature {
  string creator = 1;
  string denom = 2;
  uint32 era = 3 [(gogoproto.jsontag) = "era"];
  string pool = 4;
  OriginalTxType txType = 5;
  string propId = 6;
  string signature = 7;
}

message MsgSubmitSignatureResponse {
}

message MsgSetRParams {
  string creator = 1;
  string denom = 2;
  string gasPrice = 3;
  uint32 eraSeconds = 4;
  int32 offset = 5 [(gogoproto.jsontag) = "offset"];
  uint32 bondingDuration = 6 [(gogoproto.jsontag) = "bondingDuration"];
  string leastBond = 7;
}

message MsgSetRParamsResponse {
}

message MsgSetRelayFeeReceiver {
  string creator = 1;
  string denom = 2;
  string receiver = 3;
}

message MsgSetRelayFeeReceiverResponse {
}

message MsgSetRelayGasPrice {
  string creator = 1;
  string denom = 2;
  string gasPrice = 3;
}

message MsgSetRelayGasPriceResponse {
}

message MsgSetEraSeconds {
  string creator = 1;
  string denom = 2;
  uint32 eraSeconds = 3 [(gogoproto.jsontag) = "eraSeconds"];
  uint32 bondingDuration = 4 [(gogoproto.jsontag) = "bondingDuration"];
  int32 offset = 5 [(gogoproto.jsontag) = "offset"];
}

message MsgSetEraSecondsResponse {
}

message MsgRmBondedPool {
  string creator = 1;
  string denom = 2;
  string address = 3;
}

message MsgRmBondedPoolResponse {
}

message MsgMigrateInit {
  string creator = 1;
  string denom = 2;
  string pool = 3;
  string totalSupply = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string active = 5 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string bond = 6 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string unbond = 7 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string exchangeRate = 8 [(gogoproto.customtype) = "github.com/stafihub/stafihub/utils.Dec", (gogoproto.nullable) = false];
  string totalProtocolFee = 9 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
}

message MsgMigrateInitResponse {
}

message MsgMigrateUnbondings {
  string creator = 1;
  string denom = 2;
  string pool = 3;
  uint32 era = 4 [(gogoproto.jsontag) = "era"];
  repeated Unbonding unbondings = 5;
}

message MsgMigrateUnbondingsResponse {
}

message MsgToggleUnbondSwitch {
  string creator = 1;
  string denom = 2;
}

message MsgToggleUnbondSwitchResponse {
}

message MsgUnsealMigrateInit {
  string creator = 1;
}

message MsgUnsealMigrateInitResponse {
}

message MsgRegisterIcaPool {
  string creator = 1;
  string denom = 2;
  string connectionId = 3;
}

message MsgRegisterIcaPoolResponse {
}

message MsgSetWithdrawalAddr {
  string creator = 1;
  string delegationAddr = 3;
}

message MsgSetWithdrawalAddrResponse {
}

message MsgInitPool {
  string creator = 1;
  string denom = 2;
  string pool = 3;
}

message MsgInitPoolResponse {
}

message MsgSetPoolStatus {
  string creator = 1;
  string denom = 2;
  string pool = 3;
  PoolStatus status = 4;
}

message MsgSetPoolStatusResponse {
}

message MsgSetInterchainTxProposalStatus {
  string creator = 1;
  string proposalId = 2;
  InterchainTxStatus status = 3;
}

message MsgSetInterchainTxProposalStatusResponse {
}

message MsgFlushIbcPacket {
  string creator = 1;
  string portID = 2;
  string channelID = 3;
  uint32 sequence = 4;
}

message MsgFlushIbcPacketResponse {
}

// this line is used by starport scaffolding # proto/tx/message